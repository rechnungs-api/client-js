// This file is auto-generated by @hey-api/openapi-ts

/**
 * Request type to create a new document.
 */
export type DocumentCreateRequest = {
    /**
     * Type of a document, affecting localized strings, layouts, and possible parameters of the document.
     */
    type: 'invoice' | 'credit-note' | 'purchase-order' | 'sales-order' | 'quotation' | 'delivery-note';
    idempotencyKey?: IdempotencyKey;
    eInvoice?: EInvoiceConfiguration;
    locale: UnicodeLanguageIdentifier;
    /**
     * Unique identifier of the document in the business context, e.g. an invoice number.
     */
    number: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    issueDate: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    dueDate: string;
    deliveryPeriod?: DeliveryPeriod;
    sender: SenderParty;
    recipient: RecipientParty;
    buyerReference?: BuyerReference;
    payment: PaymentInformation;
    /**
     * Information about the delivery destination of physical goods.
     */
    delivery?: {
        address: Address;
    };
    /**
     * Text that will be displayed before the price breakdown.
     */
    preTableText?: string;
    /**
     * Text that will be displayed after the price breakdown.
     */
    postTableText?: string;
    lines: Array<{
        item: LineItem;
        quantity: Quantity;
        unitPrice: Amount;
        /**
         * Textual note that gives unstructured information that is relevant to the document line.
         */
        note?: string;
    }>;
    customData?: CustomData;
    /**
     * Theme configuration to customize the look of the generated document PDF.
     */
    theme?: {
        logo?: ImageData;
        /**
         * Font family used for PDF text rendering. See https://fontsource.org/.
         */
        fontFamily?: '42dot Sans' | 'ABeeZee' | 'Abel' | 'Abhaya Libre' | 'Aboreto' | 'Abril Fatface' | 'Abyssinica SIL' | 'Aclonica' | 'Acme' | 'Actor' | 'Adamina' | 'ADLaM Display' | 'Advent Pro' | 'Afacad' | 'Afacad Flux' | 'Agbalumo' | 'Agdasima' | 'Agu Display' | 'Aguafina Script' | 'Aileron' | 'Akatab' | 'Akaya Kanadaka' | 'Akaya Telivigala' | 'Akronim' | 'Akshar' | 'Aladin' | 'Alata' | 'Alatsi' | 'Albert Sans' | 'Aldrich' | 'Alef' | 'Alegreya' | 'Alegreya Sans' | 'Alegreya Sans SC' | 'Alegreya SC' | 'Aleo' | 'Alex Brush' | 'Alexandria' | 'Alfa Slab One' | 'Alice' | 'Alike' | 'Alike Angular' | 'Alkalami' | 'Alkatra' | 'Allan' | 'Allerta' | 'Allerta Stencil' | 'Allison' | 'Allura' | 'Almarai' | 'Almendra' | 'Almendra Display' | 'Almendra SC' | 'Alumni Sans' | 'Alumni Sans Collegiate One' | 'Alumni Sans Inline One' | 'Alumni Sans Pinstripe' | 'Amarante' | 'Amaranth' | 'Amatic SC' | 'Amethysta' | 'Amiko' | 'Amiri' | 'Amiri Quran' | 'Amita' | 'Anaheim' | 'Andada Pro' | 'Andika' | 'Anek Bangla' | 'Anek Devanagari' | 'Anek Gujarati' | 'Anek Gurmukhi' | 'Anek Kannada' | 'Anek Latin' | 'Anek Malayalam' | 'Anek Odia' | 'Anek Tamil' | 'Anek Telugu' | 'Angkor' | 'Annapurna SIL' | 'Annie Use Your Telescope' | 'Anonymous Pro' | 'Anta' | 'Antic' | 'Antic Didone' | 'Antic Slab' | 'Anton' | 'Anton SC' | 'Antonio' | 'Anuphan' | 'Anybody' | 'Aoboshi One' | 'Apfel Grotezk' | 'AR One Sans' | 'Arapey' | 'Arbutus' | 'Arbutus Slab' | 'Architects Daughter' | 'Archivo' | 'Archivo Black' | 'Archivo Narrow' | 'Are You Serious' | 'Aref Ruqaa' | 'Aref Ruqaa Ink' | 'Argentum Sans' | 'Arima' | 'Arima Madurai' | 'Arimo' | 'Arizonia' | 'Armata' | 'Arsenal' | 'Arsenal SC' | 'Artifika' | 'Arvo' | 'Arya' | 'Asap' | 'Asap Condensed' | 'Asar' | 'Asset' | 'Assistant' | 'Astloch' | 'Asul' | 'Athiti' | 'Atkinson Hyperlegible' | 'Atkinson Hyperlegible Mono' | 'Atkinson Hyperlegible Next' | 'Atma' | 'Atomic Age' | 'Aubrey' | 'Audiowide' | 'Autour One' | 'Average' | 'Average Sans' | 'Averia Gruesa Libre' | 'Averia Libre' | 'Averia Sans Libre' | 'Averia Serif Libre' | 'Azeret Mono' | 'B612' | 'B612 Mono' | 'Babylonica' | 'Bacasime Antique' | 'Bad Script' | 'Badeen Display' | 'Bagel Fat One' | 'Bagnard' | 'Bagnard Sans' | 'Bahiana' | 'Bahianita' | 'Bai Jamjuree' | 'Bakbak One' | 'Ballet' | 'Baloo 2' | 'Baloo Bhai 2' | 'Baloo Bhaijaan 2' | 'Baloo Bhaina 2' | 'Baloo Chettan 2' | 'Baloo Da 2' | 'Baloo Paaji 2' | 'Baloo Tamma 2' | 'Baloo Tammudu 2' | 'Baloo Thambi 2' | 'Balsamiq Sans' | 'Balthazar' | 'Bangers' | 'Barlow' | 'Barlow Condensed' | 'Barlow Semi Condensed' | 'Barriecito' | 'Barrio' | 'Basic' | 'Baskervville' | 'Baskervville SC' | 'Battambang' | 'Baumans' | 'Bayon' | 'Be Vietnam Pro' | 'Beau Rivage' | 'Bebas Neue' | 'Beiruti' | 'Belanosima' | 'Belgrano' | 'Bellefair' | 'Belleza' | 'Bellota' | 'Bellota Text' | 'BenchNine' | 'Benne' | 'Bentham' | 'Berkshire Swash' | 'Besley' | 'Beth Ellen' | 'Bevan' | 'BhuTuka Expanded One' | 'Big Shoulders' | 'Big Shoulders Display' | 'Big Shoulders Inline' | 'Big Shoulders Inline Display' | 'Big Shoulders Inline Text' | 'Big Shoulders Stencil' | 'Big Shoulders Stencil Display' | 'Big Shoulders Stencil Text' | 'Big Shoulders Text' | 'Bigelow Rules' | 'Bigshot One' | 'Bilbo' | 'Bilbo Swash Caps' | 'BioRhyme' | 'BioRhyme Expanded' | 'Birthstone' | 'Birthstone Bounce' | 'Biryani' | 'Bitter' | 'BIZ UDGothic' | 'BIZ UDMincho' | 'BIZ UDPGothic' | 'BIZ UDPMincho' | 'Black And White Picture' | 'Black Han Sans' | 'Black Ops One' | 'Blackout Midnight' | 'Blackout Sunrise' | 'Blackout Two AM' | 'Blaka' | 'Blaka Hollow' | 'Blaka Ink' | 'Blinker' | 'Bluu Next' | 'Bodoni Moda' | 'Bodoni Moda SC' | 'Bokor' | 'Boldonse' | 'Bona Nova' | 'Bona Nova SC' | 'Bonbon' | 'Bonheur Royale' | 'Boogaloo' | 'Borel' | 'Bowlby One' | 'Bowlby One SC' | 'Braah One' | 'Bravura' | 'Bravura Text' | 'Brawler' | 'Bree Serif' | 'Bricolage Grotesque' | 'Briem Hand' | 'Bruno Ace' | 'Bruno Ace SC' | 'Brygada 1918' | 'Bubblegum Sans' | 'Bubbler One' | 'Buda' | 'Buenard' | 'Bungee' | 'Bungee Hairline' | 'Bungee Inline' | 'Bungee Outline' | 'Bungee Shade' | 'Bungee Spice' | 'Bungee Tint' | 'Butcherman' | 'Butterfly Kids' | 'Bytesized' | 'Cabin' | 'Cabin Condensed' | 'Cabin Sketch' | 'Cactus Classical Serif' | 'Caesar Dressing' | 'Cagliostro' | 'Cairo' | 'Cairo Play' | 'Caladea' | 'Calistoga' | 'Calligraffitti' | 'Cambay' | 'Cambo' | 'Candal' | 'Cantarell' | 'Cantata One' | 'Cantora One' | 'Caprasimo' | 'Capriola' | 'Caramel' | 'Carattere' | 'Cardo' | 'Carlito' | 'Carme' | 'Carrois Gothic' | 'Carrois Gothic SC' | 'Carter One' | 'Castoro' | 'Castoro Titling' | 'Catamaran' | 'Caudex' | 'Caveat' | 'Caveat Brush' | 'Cedarville Cursive' | 'Ceviche One' | 'Chakra Petch' | 'Changa' | 'Changa One' | 'Chango' | 'Charis SIL' | 'Charm' | 'Charmonman' | 'Chathura' | 'Chau Philomene One' | 'Chela One' | 'Chelsea Market' | 'Chenla' | 'Cherish' | 'Cherry Bomb One' | 'Cherry Cream Soda' | 'Cherry Swash' | 'Chewy' | 'Chicle' | 'Chilanka' | 'Chivo' | 'Chivo Mono' | 'Chocolate Classical Sans' | 'Chokokutai' | 'Chonburi' | 'Chunk Five' | 'Cinzel' | 'Cinzel Decorative' | 'Clear Sans' | 'Clicker Script' | 'Climate Crisis' | 'Coda' | 'Coda Caption' | 'Codystar' | 'Coiny' | 'Combo' | 'Comfortaa' | 'Comforter' | 'Comforter Brush' | 'Comic Mono' | 'Comic Neue' | 'Coming Soon' | 'Comme' | 'Commissioner' | 'Commit Mono' | 'Concert One' | 'Condiment' | 'Content' | 'Contrail One' | 'Convergence' | 'Cookie' | 'Cooper Hewitt' | 'Copse' | 'Corben' | 'Corinthia' | 'Cormorant' | 'Cormorant Garamond' | 'Cormorant Infant' | 'Cormorant SC' | 'Cormorant Unicase' | 'Cormorant Upright' | 'Courgette' | 'Courier Prime' | 'Cousine' | 'Coustard' | 'Covered By Your Grace' | 'Crafty Girls' | 'Creepster' | 'Crete Round' | 'Crimson Pro' | 'Crimson Text' | 'Croissant One' | 'Crushed' | 'Cuprum' | 'Cute Font' | 'Cutive' | 'Cutive Mono' | 'Dai Banna SIL' | 'Damion' | 'Dancing Script' | 'Danfo' | 'Dangrek' | 'Darker Grotesque' | 'Darumadrop One' | 'David Libre' | 'Dawning of a New Day' | 'Days One' | 'DejaVu Math' | 'DejaVu Mono' | 'DejaVu Sans' | 'DejaVu Serif' | 'Dekko' | 'Dela Gothic One' | 'Delicious Handrawn' | 'Delius' | 'Delius Swash Caps' | 'Delius Unicase' | 'Della Respira' | 'Denk One' | 'Devonshire' | 'Dhurjati' | 'Didact Gothic' | 'Diphylleia' | 'Diplomata' | 'Diplomata SC' | 'DM Mono' | 'DM Sans' | 'DM Serif Display' | 'DM Serif Text' | 'Do Hyeon' | 'Dokdo' | 'Domine' | 'Donegal One' | 'Dongle' | 'Doppio One' | 'Dorsa' | 'Dosis' | 'DotGothic16' | 'Doto' | 'Dr Sugiyama' | 'DSEG Weather' | 'DSEG14 Classic' | 'DSEG14 Classic Mini' | 'DSEG14 Modern' | 'DSEG14 Modern Mini' | 'DSEG7 Classic' | 'DSEG7 Classic Mini' | 'DSEG7 Modern' | 'DSEG7 Modern Mini' | 'DSEG7 SEGG CHAN' | 'DSEG7 SEGG CHAN Mini' | 'Duru Sans' | 'Dynalight' | 'DynaPuff' | 'Eagle Lake' | 'East Sea Dokdo' | 'Eater' | 'EB Garamond' | 'Economica' | 'Eczar' | 'Edu AU VIC WA NT Arrows' | 'Edu AU VIC WA NT Dots' | 'Edu AU VIC WA NT Guides' | 'Edu AU VIC WA NT Hand' | 'Edu AU VIC WA NT Pre' | 'Edu NSW ACT Foundation' | 'Edu QLD Beginner' | 'Edu SA Beginner' | 'Edu TAS Beginner' | 'Edu VIC WA NT Beginner' | 'El Messiri' | 'Electrolize' | 'Elsie' | 'Elsie Swash Caps' | 'Emblema One' | 'Emilys Candy' | 'Encode Sans' | 'Encode Sans Condensed' | 'Encode Sans Expanded' | 'Encode Sans SC' | 'Encode Sans Semi Condensed' | 'Encode Sans Semi Expanded' | 'Engagement' | 'Englebert' | 'Enriqueta' | 'Ephesis' | 'Epilogue' | 'Erica One' | 'Esteban' | 'Estonia' | 'Euphoria Script' | 'Ewert' | 'Exo' | 'Exo 2' | 'Expletus Sans' | 'Explora' | 'Faculty Glyphic' | 'Fahkwang' | 'Familjen Grotesk' | 'Fanwood Text' | 'Farro' | 'Farsan' | 'Fascinate' | 'Fascinate Inline' | 'Faster One' | 'Fasthand' | 'Fauna One' | 'Faustina' | 'Federant' | 'Federo' | 'Felipa' | 'Fenix' | 'Festive' | 'Figtree' | 'Finger Paint' | 'Finlandica' | 'Fira Code' | 'Fira Mono' | 'Fira Sans' | 'Fira Sans Condensed' | 'Fira Sans Extra Condensed' | 'FiraGO' | 'Fjalla One' | 'Fjord One' | 'Flamenco' | 'Flavors' | 'Fleur De Leah' | 'Flow Block' | 'Flow Circular' | 'Flow Rounded' | 'Foldit' | 'Fondamento' | 'Fontdiner Swanky' | 'Forum' | 'Fragment Mono' | 'Francois One' | 'Frank Ruhl Libre' | 'Fraunces' | 'Freckle Face' | 'Fredericka the Great' | 'Fredoka' | 'Fredoka One' | 'Freehand' | 'Freeman' | 'Fresca' | 'Frijole' | 'Fruktur' | 'Fugaz One' | 'Fuggles' | 'Funnel Display' | 'Funnel Sans' | 'Fusion Kai G' | 'Fusion Kai J' | 'Fusion Kai T' | 'Fusion Pixel 10px Monospaced JP' | 'Fusion Pixel 10px Monospaced KR' | 'Fusion Pixel 10px Monospaced SC' | 'Fusion Pixel 10px Monospaced TC' | 'Fusion Pixel 10px Proportional JP' | 'Fusion Pixel 10px Proportional KR' | 'Fusion Pixel 10px Proportional SC' | 'Fusion Pixel 10px Proportional TC' | 'Fusion Pixel 12px Monospaced JP' | 'Fusion Pixel 12px Monospaced KR' | 'Fusion Pixel 12px Monospaced SC' | 'Fusion Pixel 12px Monospaced TC' | 'Fusion Pixel 12px Proportional JP' | 'Fusion Pixel 12px Proportional KR' | 'Fusion Pixel 12px Proportional SC' | 'Fusion Pixel 12px Proportional TC' | 'Fusion Pixel 8px Monospaced JP' | 'Fusion Pixel 8px Monospaced KR' | 'Fusion Pixel 8px Monospaced SC' | 'Fusion Pixel 8px Monospaced TC' | 'Fusion Pixel 8px Proportional JP' | 'Fusion Pixel 8px Proportional KR' | 'Fusion Pixel 8px Proportional SC' | 'Fusion Pixel 8px Proportional TC' | 'Fustat' | 'Fuzzy Bubbles' | 'Ga Maamli' | 'Gabarito' | 'Gabriela' | 'Gaegu' | 'Gafata' | 'Gajraj One' | 'Galada' | 'Galdeano' | 'Galindo' | 'Gamja Flower' | 'Gantari' | 'Gasoek One' | 'Gayathri' | 'Geist' | 'Geist Mono' | 'Geist Sans' | 'Gelasio' | 'Gemunu Libre' | 'Genjyuu Gothic' | 'Genos' | 'Gentium Book Basic' | 'Gentium Book Plus' | 'Gentium Plus' | 'Geo' | 'Geologica' | 'Georama' | 'Geostar' | 'Geostar Fill' | 'Germania One' | 'GFS Didot' | 'GFS Neohellenic' | 'Gideon Roman' | 'Gidole' | 'Gidugu' | 'Gilda Display' | 'Girassol' | 'Give You Glory' | 'Glass Antiqua' | 'Glegoo' | 'Gloock' | 'Gloria Hallelujah' | 'Glory' | 'Gluten' | 'Goblin One' | 'Gochi Hand' | 'Goldman' | 'Golos Text' | 'Gorditas' | 'Gothic A1' | 'Gotu' | 'Goudy Bookletter 1911' | 'Gowun Batang' | 'Gowun Dodum' | 'Graduate' | 'Grand Hotel' | 'Grandiflora One' | 'Grandstander' | 'Grape Nuts' | 'Gravitas One' | 'Great Vibes' | 'Grechen Fuemen' | 'Grenze' | 'Grenze Gotisch' | 'Grey Qo' | 'Griffy' | 'Gruppo' | 'Gudea' | 'Gugi' | 'Gulzar' | 'Gupter' | 'Gurajada' | 'Gwendolyn' | 'Habibi' | 'Hachi Maru Pop' | 'Hahmlet' | 'Halant' | 'Hammersmith One' | 'Hanalei' | 'Hanalei Fill' | 'Handjet' | 'Handlee' | 'Hanken Grotesk' | 'Hanuman' | 'Happy Monkey' | 'Harmattan' | 'Hauora Sans' | 'Headland One' | 'Hedvig Letters Sans' | 'Hedvig Letters Serif' | 'Heebo' | 'Henny Penny' | 'Hepta Slab' | 'Herr Von Muellerhoff' | 'Hi Melody' | 'Hina Mincho' | 'Hind' | 'Hind Guntur' | 'Hind Madurai' | 'Hind Mysuru' | 'Hind Siliguri' | 'Hind Vadodara' | 'Holtwood One SC' | 'Homemade Apple' | 'Homenaje' | 'Honk' | 'Host Grotesk' | 'Hubballi' | 'Hubot Sans' | 'Hurricane' | 'iA Writer Duo' | 'iA Writer Mono' | 'iA Writer Quattro' | 'Iansui' | 'Ibarra Real Nova' | 'IBM Plex Mono' | 'IBM Plex Sans' | 'IBM Plex Sans Arabic' | 'IBM Plex Sans Condensed' | 'IBM Plex Sans Devanagari' | 'IBM Plex Sans Hebrew' | 'IBM Plex Sans JP' | 'IBM Plex Sans KR' | 'IBM Plex Sans Thai' | 'IBM Plex Sans Thai Looped' | 'IBM Plex Serif' | 'Iceberg' | 'Iceland' | 'IM Fell Double Pica' | 'IM Fell Double Pica SC' | 'IM Fell DW Pica' | 'IM Fell DW Pica SC' | 'IM Fell English' | 'IM Fell English SC' | 'IM Fell French Canon' | 'IM Fell French Canon SC' | 'IM Fell Great Primer' | 'IM Fell Great Primer SC' | 'Imbue' | 'Imperial Script' | 'Imprima' | 'Inclusive Sans' | 'Inconsolata' | 'Inder' | 'Indie Flower' | 'Ingrid Darling' | 'Inika' | 'Inknut Antiqua' | 'Inria Sans' | 'Inria Serif' | 'Inspiration' | 'Instrument Sans' | 'Instrument Serif' | 'Inter' | 'Inter Tight' | 'Iosevka' | 'Iosevka Aile' | 'Iosevka Curly' | 'Iosevka Curly Slab' | 'Iosevka Etoile' | 'Irish Grover' | 'Island Moments' | 'Istok Web' | 'Italiana' | 'Italianno' | 'Itim' | 'Jacquard 12' | 'Jacquard 12 Charted' | 'Jacquard 24' | 'Jacquard 24 Charted' | 'Jacquarda Bastarda 9' | 'Jacquarda Bastarda 9 Charted' | 'Jacques Francois' | 'Jacques Francois Shadow' | 'Jaini' | 'Jaini Purva' | 'Jaldi' | 'Jaro' | 'Jersey 10' | 'Jersey 10 Charted' | 'Jersey 15' | 'Jersey 15 Charted' | 'Jersey 20' | 'Jersey 20 Charted' | 'Jersey 25' | 'Jersey 25 Charted' | 'JetBrains Mono' | 'Jim Nightshade' | 'Joan' | 'Jockey One' | 'Jolly Lodger' | 'Jomhuria' | 'Jomolhari' | 'Josefin Sans' | 'Josefin Slab' | 'Jost' | 'Joti One' | 'Jua' | 'Judson' | 'Julee' | 'Julius Sans One' | 'Junction' | 'Junge' | 'Jura' | 'Just Another Hand' | 'Just Me Again Down Here' | 'K2D' | 'Kablammo' | 'Kadwa' | 'Kaisei Decol' | 'Kaisei HarunoUmi' | 'Kaisei Opti' | 'Kaisei Tokumin' | 'Kalam' | 'Kalnia' | 'Kalnia Glaze' | 'Kameron' | 'Kanit' | 'Kantumruy' | 'Kantumruy Pro' | 'Karantina' | 'Karla' | 'Karla Tamil Inclined' | 'Karla Tamil Upright' | 'Karma' | 'Karmilla' | 'Katibeh' | 'Kaushan Script' | 'Kavivanar' | 'Kavoon' | 'Kay Pho Du' | 'Kdam Thmor Pro' | 'Keania One' | 'Kelly Slab' | 'Kenia' | 'Khand' | 'Khmer' | 'Khula' | 'Kings' | 'Kirang Haerang' | 'Kite One' | 'Kiwi Maru' | 'Klee One' | 'Knewave' | 'Kodchasan' | 'Kode Mono' | 'Koh Santepheap' | 'KoHo' | 'Kolker Brush' | 'Konkhmer Sleokchher' | 'Kosugi' | 'Kosugi Maru' | 'Kotta One' | 'Koulen' | 'Kranky' | 'Kreon' | 'Kristi' | 'Krona One' | 'Krub' | 'Kufam' | 'Kulim Park' | 'Kumar One' | 'Kumar One Outline' | 'Kumbh Sans' | 'Kurale' | 'La Belle Aurore' | 'Labrada' | 'Lacquer' | 'Laila' | 'Lakki Reddy' | 'Lalezar' | 'Lancelot' | 'Langar' | 'Lateef' | 'Lato' | 'Lavishly Yours' | 'League Gothic' | 'League Mono' | 'League Script' | 'League Spartan' | 'Leckerli One' | 'Ledger' | 'Lekton' | 'Lemon' | 'Lemonada' | 'Lexend' | 'Lexend Deca' | 'Lexend Exa' | 'Lexend Giga' | 'Lexend Mega' | 'Lexend Peta' | 'Lexend Tera' | 'Lexend Zetta' | 'Lextrall' | 'Libre Barcode 128' | 'Libre Barcode 128 Text' | 'Libre Barcode 39' | 'Libre Barcode 39 Extended' | 'Libre Barcode 39 Extended Text' | 'Libre Barcode 39 Text' | 'Libre Barcode EAN13 Text' | 'Libre Baskerville' | 'Libre Bodoni' | 'Libre Caslon Condensed' | 'Libre Caslon Display' | 'Libre Caslon Text' | 'Libre Franklin' | 'Licorice' | 'Life Savers' | 'Lilita One' | 'Lily Script One' | 'Limelight' | 'Linden Hill' | 'Linefont' | 'Lisu Bosa' | 'Liter' | 'Literata' | 'Liu Jian Mao Cao' | 'Livvic' | 'Lobster' | 'Lobster Two' | 'Londrina Outline' | 'Londrina Shadow' | 'Londrina Sketch' | 'Londrina Solid' | 'Long Cang' | 'Lora' | 'Love Light' | 'Love Ya Like A Sister' | 'Loved by the King' | 'Lovers Quarrel' | 'Luckiest Guy' | 'Lugrasimo' | 'Lumanosimo' | 'Lunasima' | 'Lusitana' | 'Lustria' | 'Luxurious Roman' | 'Luxurious Script' | 'LXGW WenKai' | 'LXGW WenKai Mono TC' | 'LXGW WenKai TC' | 'M PLUS 1' | 'M PLUS 1 Code' | 'M PLUS 1p' | 'M PLUS 2' | 'M PLUS Code Latin' | 'M PLUS Rounded 1c' | 'Ma Shan Zheng' | 'Macondo' | 'Macondo Swash Caps' | 'Mada' | 'Madimi One' | 'Magra' | 'Maiden Orange' | 'Maitree' | 'Major Mono Display' | 'Mako' | 'Mali' | 'Mallanna' | 'Maname' | 'Mandali' | 'Manjari' | 'Manrope' | 'Mansalva' | 'Manuale' | 'Maple Mono' | 'Marcellus' | 'Marcellus SC' | 'Marck Script' | 'Margarine' | 'Marhey' | 'Markazi Text' | 'Marko One' | 'Marmelad' | 'Martel' | 'Martel Sans' | 'Martian Mono' | 'Marvel' | 'Mate' | 'Mate SC' | 'Matemasie' | 'Material Icons' | 'Material Icons Outlined' | 'Material Icons Round' | 'Material Icons Sharp' | 'Material Icons Two Tone' | 'Material Symbols' | 'Material Symbols Outlined' | 'Material Symbols Rounded' | 'Material Symbols Sharp' | 'Maven Pro' | 'McLaren' | 'Mea Culpa' | 'Meddon' | 'MedievalSharp' | 'Medula One' | 'Meera Inimai' | 'Megrim' | 'Meie Script' | 'Meow Script' | 'Merienda' | 'Merienda One' | 'Merriweather' | 'Merriweather Sans' | 'Metal' | 'Metal Mania' | 'Metamorphous' | 'Metrophobic' | 'Metropolis' | 'Michroma' | 'Micro 5' | 'Micro 5 Charted' | 'Milonga' | 'Miltonian' | 'Miltonian Tattoo' | 'Mina' | 'Mingzat' | 'Miniver' | 'Miriam Libre' | 'Mirza' | 'Miss Fajardose' | 'Mitr' | 'Mochiy Pop One' | 'Mochiy Pop P One' | 'Modak' | 'Modern Antiqua' | 'Moderustic' | 'Mogra' | 'Mohave' | 'Moirai One' | 'Molengo' | 'Molle' | 'Mona Sans' | 'Monaspace Argon' | 'Monaspace Krypton' | 'Monaspace Neon' | 'Monaspace Radon' | 'Monaspace Xenon' | 'Monda' | 'Monofett' | 'Monomakh' | 'Monomaniac One' | 'Mononoki' | 'Monoton' | 'Monsieur La Doulaise' | 'Montaga' | 'Montagu Slab' | 'MonteCarlo' | 'Montez' | 'Montserrat' | 'Montserrat Alternates' | 'Montserrat Subrayada' | 'Montserrat Underline' | 'Moo Lah Lah' | 'Mooli' | 'Moon Dance' | 'Moul' | 'Moulpali' | 'Mountains of Christmas' | 'Mouse Memoirs' | 'Mr Bedfort' | 'Mr Dafoe' | 'Mr De Haviland' | 'Mrs Saint Delafield' | 'Mrs Sheppards' | 'Ms Madi' | 'Mukta' | 'Mukta Mahee' | 'Mukta Malar' | 'Mukta Vaani' | 'Mulish' | 'Murecho' | 'MuseoModerno' | 'My Soul' | 'Mynerve' | 'Mystery Quest' | 'Nabla' | 'Namdhinggo' | 'Nanum Brush Script' | 'Nanum Gothic' | 'Nanum Gothic Coding' | 'Nanum Myeongjo' | 'Nanum Pen Script' | 'Narnoor' | 'National Park' | 'Neonderthaw' | 'Nerko One' | 'Neucha' | 'Neuton' | 'New Amsterdam' | 'New Rocker' | 'New Tegomin' | 'News Cycle' | 'Newsreader' | 'Niconne' | 'Niramit' | 'Nixie One' | 'Nobile' | 'Nokora' | 'Norican' | 'Norwester' | 'Nosifer' | 'Notable' | 'Nothing You Could Do' | 'Noticia Text' | 'Noto Color Emoji' | 'Noto Emoji' | 'Noto Kufi Arabic' | 'Noto Mono' | 'Noto Music' | 'Noto Naskh Arabic' | 'Noto Nastaliq Urdu' | 'Noto Rashi Hebrew' | 'Noto Sans' | 'Noto Sans Adlam' | 'Noto Sans Adlam Unjoined' | 'Noto Sans Anatolian Hieroglyphs' | 'Noto Sans Arabic' | 'Noto Sans Armenian' | 'Noto Sans Avestan' | 'Noto Sans Balinese' | 'Noto Sans Bamum' | 'Noto Sans Bassa Vah' | 'Noto Sans Batak' | 'Noto Sans Bengali' | 'Noto Sans Bhaiksuki' | 'Noto Sans Brahmi' | 'Noto Sans Buginese' | 'Noto Sans Buhid' | 'Noto Sans Canadian Aboriginal' | 'Noto Sans Carian' | 'Noto Sans Caucasian Albanian' | 'Noto Sans Chakma' | 'Noto Sans Cham' | 'Noto Sans Cherokee' | 'Noto Sans Chorasmian' | 'Noto Sans Coptic' | 'Noto Sans Cuneiform' | 'Noto Sans Cypriot' | 'Noto Sans Cypro Minoan' | 'Noto Sans Deseret' | 'Noto Sans Devanagari' | 'Noto Sans Display' | 'Noto Sans Duployan' | 'Noto Sans Egyptian Hieroglyphs' | 'Noto Sans Elbasan' | 'Noto Sans Elymaic' | 'Noto Sans Ethiopic' | 'Noto Sans Georgian' | 'Noto Sans Glagolitic' | 'Noto Sans Gothic' | 'Noto Sans Grantha' | 'Noto Sans Gujarati' | 'Noto Sans Gunjala Gondi' | 'Noto Sans Gurmukhi' | 'Noto Sans Hanifi Rohingya' | 'Noto Sans Hanunoo' | 'Noto Sans Hatran' | 'Noto Sans Hebrew' | 'Noto Sans HK' | 'Noto Sans Imperial Aramaic' | 'Noto Sans Indic Siyaq Numbers' | 'Noto Sans Inscriptional Pahlavi' | 'Noto Sans Inscriptional Parthian' | 'Noto Sans Javanese' | 'Noto Sans JP' | 'Noto Sans Kaithi' | 'Noto Sans Kannada' | 'Noto Sans Kawi' | 'Noto Sans Kayah Li' | 'Noto Sans Kharoshthi' | 'Noto Sans Khmer' | 'Noto Sans Khojki' | 'Noto Sans Khudawadi' | 'Noto Sans KR' | 'Noto Sans Lao' | 'Noto Sans Lao Looped' | 'Noto Sans Lepcha' | 'Noto Sans Limbu' | 'Noto Sans Linear A' | 'Noto Sans Linear B' | 'Noto Sans Lisu' | 'Noto Sans Lycian' | 'Noto Sans Lydian' | 'Noto Sans Mahajani' | 'Noto Sans Malayalam' | 'Noto Sans Mandaic' | 'Noto Sans Manichaean' | 'Noto Sans Marchen' | 'Noto Sans Masaram Gondi' | 'Noto Sans Math' | 'Noto Sans Mayan Numerals' | 'Noto Sans Medefaidrin' | 'Noto Sans Meetei Mayek' | 'Noto Sans Mende Kikakui' | 'Noto Sans Meroitic' | 'Noto Sans Miao' | 'Noto Sans Modi' | 'Noto Sans Mongolian' | 'Noto Sans Mono' | 'Noto Sans Mro' | 'Noto Sans Multani' | 'Noto Sans Myanmar' | 'Noto Sans Nabataean' | 'Noto Sans Nag Mundari' | 'Noto Sans Nandinagari' | 'Noto Sans New Tai Lue' | 'Noto Sans Newa' | 'Noto Sans NKo' | 'Noto Sans NKo Unjoined' | 'Noto Sans Nushu' | 'Noto Sans Ogham' | 'Noto Sans Ol Chiki' | 'Noto Sans Old Hungarian' | 'Noto Sans Old Italic' | 'Noto Sans Old North Arabian' | 'Noto Sans Old Permic' | 'Noto Sans Old Persian' | 'Noto Sans Old Sogdian' | 'Noto Sans Old South Arabian' | 'Noto Sans Old Turkic' | 'Noto Sans Oriya' | 'Noto Sans Osage' | 'Noto Sans Osmanya' | 'Noto Sans Pahawh Hmong' | 'Noto Sans Palmyrene' | 'Noto Sans Pau Cin Hau' | 'Noto Sans Phags Pa' | 'Noto Sans PhagsPa' | 'Noto Sans Phoenician' | 'Noto Sans Psalter Pahlavi' | 'Noto Sans Rejang' | 'Noto Sans Runic' | 'Noto Sans Samaritan' | 'Noto Sans Saurashtra' | 'Noto Sans SC' | 'Noto Sans Sharada' | 'Noto Sans Shavian' | 'Noto Sans Siddham' | 'Noto Sans SignWriting' | 'Noto Sans Sinhala' | 'Noto Sans Sogdian' | 'Noto Sans Sora Sompeng' | 'Noto Sans Soyombo' | 'Noto Sans Sundanese' | 'Noto Sans Syloti Nagri' | 'Noto Sans Symbols' | 'Noto Sans Symbols 2' | 'Noto Sans Syriac' | 'Noto Sans Syriac Eastern' | 'Noto Sans Tagalog' | 'Noto Sans Tagbanwa' | 'Noto Sans Tai Le' | 'Noto Sans Tai Tham' | 'Noto Sans Tai Viet' | 'Noto Sans Takri' | 'Noto Sans Tamil' | 'Noto Sans Tamil Supplement' | 'Noto Sans Tangsa' | 'Noto Sans TC' | 'Noto Sans Telugu' | 'Noto Sans Thaana' | 'Noto Sans Thai' | 'Noto Sans Thai Looped' | 'Noto Sans Tifinagh' | 'Noto Sans Tirhuta' | 'Noto Sans Ugaritic' | 'Noto Sans Vai' | 'Noto Sans Vithkuqi' | 'Noto Sans Wancho' | 'Noto Sans Warang Citi' | 'Noto Sans Yi' | 'Noto Sans Zanabazar Square' | 'Noto Serif' | 'Noto Serif Ahom' | 'Noto Serif Armenian' | 'Noto Serif Balinese' | 'Noto Serif Bengali' | 'Noto Serif Devanagari' | 'Noto Serif Display' | 'Noto Serif Dogra' | 'Noto Serif Ethiopic' | 'Noto Serif Georgian' | 'Noto Serif Grantha' | 'Noto Serif Gujarati' | 'Noto Serif Gurmukhi' | 'Noto Serif Hebrew' | 'Noto Serif Hentaigana' | 'Noto Serif HK' | 'Noto Serif JP' | 'Noto Serif Kannada' | 'Noto Serif Khitan Small Script' | 'Noto Serif Khmer' | 'Noto Serif Khojki' | 'Noto Serif KR' | 'Noto Serif Lao' | 'Noto Serif Makasar' | 'Noto Serif Malayalam' | 'Noto Serif Myanmar' | 'Noto Serif NP Hmong' | 'Noto Serif Old Uyghur' | 'Noto Serif Oriya' | 'Noto Serif Ottoman Siyaq' | 'Noto Serif SC' | 'Noto Serif Sinhala' | 'Noto Serif Tamil' | 'Noto Serif Tangut' | 'Noto Serif TC' | 'Noto Serif Telugu' | 'Noto Serif Thai' | 'Noto Serif Tibetan' | 'Noto Serif Todhri' | 'Noto Serif Toto' | 'Noto Serif Vithkuqi' | 'Noto Serif Yezidi' | 'Noto Traditional Nushu' | 'Noto Znamenny Musical Notation' | 'Nova Cut' | 'Nova Flat' | 'Nova Mono' | 'Nova Oval' | 'Nova Round' | 'Nova Script' | 'Nova Slim' | 'Nova Square' | 'NTR' | 'Numans' | 'Nunito' | 'Nunito Sans' | 'Nuosu SIL' | 'Odibee Sans' | 'Odor Mean Chey' | 'Offside' | 'Oi' | 'Ojuju' | 'Old Standard TT' | 'Oldenburg' | 'Ole' | 'Oleo Script' | 'Oleo Script Swash Caps' | 'Onest' | 'Oooh Baby' | 'Open Sans' | 'Open Sauce One' | 'Open Sauce Sans' | 'Open Sauce Two' | 'OpenDyslexic' | 'Oranienbaum' | 'Orbit' | 'Orbitron' | 'Oregano' | 'Orelega One' | 'Orienta' | 'Original Surfer' | 'Ostrich Sans' | 'Oswald' | 'Outfit' | 'Over the Rainbow' | 'Overlock' | 'Overlock SC' | 'Overpass' | 'Overpass Mono' | 'Ovo' | 'Oxanium' | 'Oxygen' | 'Oxygen Mono' | 'Pacifico' | 'Padauk' | 'Padyakke Expanded One' | 'Palanquin' | 'Palanquin Dark' | 'Palette Mosaic' | 'Pangolin' | 'Paprika' | 'Parisienne' | 'Parkinsans' | 'Passero One' | 'Passion One' | 'Passions Conflict' | 'Pathway Extreme' | 'Pathway Gothic One' | 'Patrick Hand' | 'Patrick Hand SC' | 'Pattaya' | 'Patua One' | 'Pavanam' | 'Paytone One' | 'Peace Sans' | 'Peddana' | 'Peralta' | 'Permanent Marker' | 'Petemoss' | 'Petit Formal Script' | 'Petrona' | 'Phetsarath' | 'Philosopher' | 'Phudu' | 'Piazzolla' | 'Piedra' | 'Pinyon Script' | 'Pirata One' | 'Pitagon Sans' | 'Pitagon Sans Mono' | 'Pitagon Sans Text' | 'Pitagon Serif' | 'Pixelify Sans' | 'Plaster' | 'Platypi' | 'Play' | 'Playball' | 'Playfair' | 'Playfair Display' | 'Playfair Display SC' | 'Playpen Sans' | 'Playwrite AR' | 'Playwrite AR Guides' | 'Playwrite AT' | 'Playwrite AT Guides' | 'Playwrite AU NSW' | 'Playwrite AU NSW Guides' | 'Playwrite AU QLD' | 'Playwrite AU QLD Guides' | 'Playwrite AU SA' | 'Playwrite AU SA Guides' | 'Playwrite AU TAS' | 'Playwrite AU TAS Guides' | 'Playwrite AU VIC' | 'Playwrite AU VIC Guides' | 'Playwrite BE VLG' | 'Playwrite BE VLG Guides' | 'Playwrite BE WAL' | 'Playwrite BE WAL Guides' | 'Playwrite BR' | 'Playwrite BR Guides' | 'Playwrite CA' | 'Playwrite CA Guides' | 'Playwrite CL' | 'Playwrite CL Guides' | 'Playwrite CO' | 'Playwrite CO Guides' | 'Playwrite CU' | 'Playwrite CU Guides' | 'Playwrite CZ' | 'Playwrite CZ Guides' | 'Playwrite DE Grund' | 'Playwrite DE Grund Guides' | 'Playwrite DE LA' | 'Playwrite DE LA Guides' | 'Playwrite DE SAS' | 'Playwrite DE SAS Guides' | 'Playwrite DE VA' | 'Playwrite DE VA Guides' | 'Playwrite DK Loopet' | 'Playwrite DK Loopet Guides' | 'Playwrite DK Uloopet' | 'Playwrite DK Uloopet Guides' | 'Playwrite ES' | 'Playwrite ES Deco' | 'Playwrite ES Deco Guides' | 'Playwrite ES Guides' | 'Playwrite FR Moderne' | 'Playwrite FR Moderne Guides' | 'Playwrite FR Trad' | 'Playwrite FR Trad Guides' | 'Playwrite GB J' | 'Playwrite GB J Guides' | 'Playwrite GB S' | 'Playwrite GB S Guides' | 'Playwrite HR' | 'Playwrite HR Guides' | 'Playwrite HR Lijeva' | 'Playwrite HR Lijeva Guides' | 'Playwrite HU' | 'Playwrite HU Guides' | 'Playwrite ID' | 'Playwrite ID Guides' | 'Playwrite IE' | 'Playwrite IE Guides' | 'Playwrite IN' | 'Playwrite IN Guides' | 'Playwrite IS' | 'Playwrite IS Guides' | 'Playwrite IT Moderna' | 'Playwrite IT Moderna Guides' | 'Playwrite IT Trad' | 'Playwrite IT Trad Guides' | 'Playwrite MX' | 'Playwrite MX Guides' | 'Playwrite NG Modern' | 'Playwrite NG Modern Guides' | 'Playwrite NL' | 'Playwrite NL Guides' | 'Playwrite NO' | 'Playwrite NO Guides' | 'Playwrite NZ' | 'Playwrite NZ Guides' | 'Playwrite PE' | 'Playwrite PE Guides' | 'Playwrite PL' | 'Playwrite PL Guides' | 'Playwrite PT' | 'Playwrite PT Guides' | 'Playwrite RO' | 'Playwrite RO Guides' | 'Playwrite SK' | 'Playwrite SK Guides' | 'Playwrite TZ' | 'Playwrite TZ Guides' | 'Playwrite US Modern' | 'Playwrite US Modern Guides' | 'Playwrite US Trad' | 'Playwrite US Trad Guides' | 'Playwrite VN' | 'Playwrite VN Guides' | 'Playwrite ZA' | 'Playwrite ZA Guides' | 'Plus Jakarta Sans' | 'Pochaevsk' | 'Podkova' | 'Poetsen One' | 'Poiret One' | 'Poller One' | 'Poltawski Nowy' | 'Poly' | 'Pompiere' | 'Ponnala' | 'Ponomar' | 'Pontano Sans' | 'Poor Story' | 'Poppins' | 'Port Lligat Sans' | 'Port Lligat Slab' | 'Potta One' | 'Pragati Narrow' | 'Praise' | 'Prata' | 'Preahvihear' | 'Press Start 2P' | 'Pretendard' | 'Pridi' | 'Princess Sofia' | 'Prociono' | 'Prompt' | 'Prosto One' | 'Protest Guerrilla' | 'Protest Revolution' | 'Protest Riot' | 'Protest Strike' | 'Proza Libre' | 'PT Mono' | 'PT Sans' | 'PT Sans Caption' | 'PT Sans Narrow' | 'PT Serif' | 'PT Serif Caption' | 'Public Sans' | 'Puppies Play' | 'Puritan' | 'Purple Purse' | 'Pushster' | 'Qahiri' | 'Quando' | 'Quantico' | 'Quattrocento' | 'Quattrocento Sans' | 'Questrial' | 'Quicksand' | 'Quintessential' | 'Qwigley' | 'Qwitcher Grypen' | 'Racing Sans One' | 'Radio Canada' | 'Radio Canada Big' | 'Radley' | 'Rajdhani' | 'Rakkas' | 'Raleway' | 'Raleway Dots' | 'Ramabhadra' | 'Ramaraja' | 'Rambla' | 'Rammetto One' | 'Rampart One' | 'Ranchers' | 'Rancho' | 'Ranga' | 'Rasa' | 'Rationale' | 'Ravi Prakash' | 'Readex Pro' | 'Recursive' | 'Red Hat Display' | 'Red Hat Mono' | 'Red Hat Text' | 'Red Rose' | 'Redacted' | 'Redacted Script' | 'Redaction' | 'Redaction 10' | 'Redaction 100' | 'Redaction 20' | 'Redaction 35' | 'Redaction 50' | 'Redaction 70' | 'Reddit Mono' | 'Reddit Sans' | 'Reddit Sans Condensed' | 'Redressed' | 'Reem Kufi' | 'Reem Kufi Fun' | 'Reem Kufi Ink' | 'Reenie Beanie' | 'Reggae One' | 'REM' | 'Rethink Sans' | 'Revalia' | 'Rhodium Libre' | 'Ribeye' | 'Ribeye Marrow' | 'Righteous' | 'Risque' | 'Road Rage' | 'Roboto' | 'Roboto Condensed' | 'Roboto Flex' | 'Roboto Mono' | 'Roboto Serif' | 'Roboto Slab' | 'Rochester' | 'Rock 3D' | 'Rock Salt' | 'RocknRoll One' | 'Rokkitt' | 'Romanesco' | 'Ropa Sans' | 'Rosario' | 'Rosarivo' | 'Rouge Script' | 'Rowdies' | 'Rozha One' | 'Rubik' | 'Rubik 80s Fade' | 'Rubik Beastly' | 'Rubik Broken Fax' | 'Rubik Bubbles' | 'Rubik Burned' | 'Rubik Dirt' | 'Rubik Distressed' | 'Rubik Doodle Shadow' | 'Rubik Doodle Triangles' | 'Rubik Gemstones' | 'Rubik Glitch' | 'Rubik Glitch Pop' | 'Rubik Iso' | 'Rubik Lines' | 'Rubik Maps' | 'Rubik Marker Hatch' | 'Rubik Maze' | 'Rubik Microbe' | 'Rubik Mono One' | 'Rubik Moonrocks' | 'Rubik One' | 'Rubik Pixels' | 'Rubik Puddles' | 'Rubik Scribble' | 'Rubik Spray Paint' | 'Rubik Storm' | 'Rubik Vinyl' | 'Rubik Wet Paint' | 'Ruda' | 'Rufina' | 'Ruge Boogie' | 'Ruluko' | 'Rum Raisin' | 'Ruslan Display' | 'Russo One' | 'Ruthie' | 'Ruwudu' | 'Rye' | 'Sacramento' | 'Sahitya' | 'Sail' | 'Saira' | 'Saira Condensed' | 'Saira Extra Condensed' | 'Saira Semi Condensed' | 'Saira Stencil One' | 'Salsa' | 'Sanchez' | 'Sancreek' | 'Sankofa Display' | 'Sansita' | 'Sansita Swashed' | 'Sarabun' | 'Sarala' | 'Sarina' | 'Sarpanch' | 'Sassy Frass' | 'Satisfy' | 'Sawarabi Gothic' | 'Sawarabi Mincho' | 'Scada' | 'Scheherazade New' | 'Schibsted Grotesk' | 'Schoolbell' | 'Scope One' | 'Seaweed Script' | 'Secular One' | 'Sedan' | 'Sedan SC' | 'Sedgwick Ave' | 'Sedgwick Ave Display' | 'Sen' | 'Send Flowers' | 'Sevillana' | 'Seymour One' | 'Shadows Into Light' | 'Shadows Into Light Two' | 'Shafarik' | 'Shalimar' | 'Shantell Sans' | 'Shanti' | 'Share' | 'Share Tech' | 'Share Tech Mono' | 'Shippori Antique' | 'Shippori Antique B1' | 'Shippori Mincho' | 'Shippori Mincho B1' | 'Shizuru' | 'Shojumaru' | 'Short Stack' | 'Shrikhand' | 'Siemreap' | 'Sigmar' | 'Sigmar One' | 'Signika' | 'Signika Negative' | 'Silkscreen' | 'Simonetta' | 'Single Day' | 'Sintony' | 'Sirin Stencil' | 'Six Caps' | 'Sixtyfour' | 'Sixtyfour Convergence' | 'Skranji' | 'Slabo 13px' | 'Slabo 27px' | 'Slackey' | 'Slackside One' | 'Smokum' | 'Smooch' | 'Smooch Sans' | 'Smythe' | 'SN Pro' | 'Sniglet' | 'Snippet' | 'Snowburst One' | 'Sofadi One' | 'Sofia' | 'Sofia Sans' | 'Sofia Sans Condensed' | 'Sofia Sans Extra Condensed' | 'Sofia Sans Semi Condensed' | 'Solitreo' | 'Solway' | 'Sometype Mono' | 'Song Myung' | 'Sono' | 'Sonsie One' | 'Sora' | 'Sorts Mill Goudy' | 'Sour Gummy' | 'Source Code Pro' | 'Source Sans 3' | 'Source Sans Pro' | 'Source Serif 4' | 'Source Serif Pro' | 'Space Grotesk' | 'Space Mono' | 'Special Elite' | 'Special Gothic' | 'Special Gothic Condensed One' | 'Special Gothic Expanded One' | 'Spectral' | 'Spectral SC' | 'Spicy Rice' | 'Spinnaker' | 'Spirax' | 'Splash' | 'Spline Sans' | 'Spline Sans Mono' | 'Squada One' | 'Square Peg' | 'Sree Krushnadevaraya' | 'Sriracha' | 'Srisakdi' | 'Staatliches' | 'Stalemate' | 'Stalinist One' | 'Stardos Stencil' | 'Stick' | 'Stick No Bills' | 'Stint Ultra Condensed' | 'Stint Ultra Expanded' | 'STIX Two Text' | 'Stoke' | 'Strait' | 'Style Script' | 'Stylish' | 'Sue Ellen Francisco' | 'Suez One' | 'Sulphur Point' | 'Sumana' | 'Sunflower' | 'Sunshiney' | 'Supermercado One' | 'Sura' | 'Suranna' | 'Suravaram' | 'SUSE' | 'Suwannaphum' | 'Swanky and Moo Moo' | 'Syncopate' | 'Syne' | 'Syne Italic' | 'Syne Mono' | 'Syne Tactile' | 'Tac One' | 'Tai Heritage Pro' | 'Tajawal' | 'Tangerine' | 'Tapestry' | 'Taprom' | 'Tauri' | 'Taviraj' | 'Teachers' | 'Teko' | 'Tektur' | 'Telex' | 'Tenali Ramakrishna' | 'Tenor Sans' | 'Text Me One' | 'Texturina' | 'Thasadith' | 'The Girl Next Door' | 'The Nautigal' | 'Tienne' | 'Tillana' | 'Tilt Neon' | 'Tilt Prism' | 'Tilt Warp' | 'Timmana' | 'Tinos' | 'Tiny5' | 'Tiro Bangla' | 'Tiro Devanagari Hindi' | 'Tiro Devanagari Marathi' | 'Tiro Devanagari Sanskrit' | 'Tiro Gurmukhi' | 'Tiro Kannada' | 'Tiro Tamil' | 'Tiro Telugu' | 'Titan One' | 'Titillium Web' | 'Tomorrow' | 'Tourney' | 'Trade Winds' | 'Train One' | 'Triodion' | 'Trirong' | 'Trispace' | 'Trocchi' | 'Trochut' | 'Truculenta' | 'Trykker' | 'Tsukimi Rounded' | 'Tulpen One' | 'Turret Road' | 'Twinkle Star' | 'Ubuntu' | 'Ubuntu Condensed' | 'Ubuntu Mono' | 'Ubuntu Sans' | 'Ubuntu Sans Mono' | 'Uchen' | 'Ultra' | 'Unbounded' | 'Uncial Antiqua' | 'Uncut Sans' | 'Underdog' | 'Unica One' | 'Unifont' | 'UnifontEX' | 'UnifrakturCook' | 'UnifrakturMaguntia' | 'Unkempt' | 'Unlock' | 'Unna' | 'Updock' | 'Urbanist' | 'Vampiro One' | 'Varela' | 'Varela Round' | 'Varta' | 'Vast Shadow' | 'Vazirmatn' | 'Vesper Libre' | 'Viaoda Libre' | 'Vibes' | 'Vibur' | 'Victor Mono' | 'Vidaloka' | 'Viga' | 'Vina Sans' | 'Voces' | 'Volkhov' | 'Vollkorn' | 'Vollkorn SC' | 'Voltaire' | 'VT323' | 'Vujahday Script' | 'Waiting for the Sunrise' | 'Wallpoet' | 'Walter Turncoat' | 'Warnes' | 'Water Brush' | 'Waterfall' | 'Wavefont' | 'Wellfleet' | 'Wendy One' | 'Whisper' | 'WIN95FA' | 'WindSong' | 'Winky Rough' | 'Winky Sans' | 'Wire One' | 'Wittgenstein' | 'Wix Madefor Display' | 'Wix Madefor Text' | 'Work Sans' | 'Workbench' | 'Xanh Mono' | 'YakuHanJP' | 'YakuHanJPs' | 'YakuHanMP' | 'YakuHanMPs' | 'YakuHanRP' | 'YakuHanRPs' | 'Yaldevi' | 'Yanone Kaffeesatz' | 'Yantramanav' | 'Yarndings 12' | 'Yarndings 12 Charted' | 'Yarndings 20' | 'Yarndings 20 Charted' | 'Yatra One' | 'Yellowtail' | 'Yeon Sung' | 'Yeseva One' | 'Yesteryear' | 'Yomogi' | 'Young Serif' | 'Yrsa' | 'Ysabeau' | 'Ysabeau Infant' | 'Ysabeau Office' | 'Ysabeau SC' | 'Yuji Boku' | 'Yuji Hentaigana Akari' | 'Yuji Hentaigana Akebono' | 'Yuji Mai' | 'Yuji Syuku' | 'Yusei Magic' | 'Zain' | 'ZCOOL KuaiLe' | 'ZCOOL QingKe HuangYou' | 'ZCOOL XiaoWei' | 'Zen Antique' | 'Zen Antique Soft' | 'Zen Dots' | 'Zen Kaku Gothic Antique' | 'Zen Kaku Gothic New' | 'Zen Kurenaido' | 'Zen Loop' | 'Zen Maru Gothic' | 'Zen Old Mincho' | 'Zen Tokyo Zoo' | 'Zeyada' | 'Zhi Mang Xing' | 'Zilla Slab' | 'Zilla Slab Highlight';
        /**
         * Configuration for the document's page theme.
         */
        page?: {
            margin?: number | {
                /**
                 * Insets on the X-Axis, i.e. left and right, in centimeters.
                 */
                x: number;
                /**
                 * Insets on the Y-Axis, i.e. top and bottom, in centimeters.
                 */
                y: number;
            } | {
                /**
                 * Insets on the top side in centimeters.
                 */
                top: number;
                /**
                 * Insets on the bottom side in centimeters.
                 */
                bottom: number;
                /**
                 * Insets on the left side in centimeters.
                 */
                left: number;
                /**
                 * Insets on the right side in centimeters.
                 */
                right: number;
            };
            background?: ImageData;
        };
        header?: {
            variant: 'solstice';
        } | {
            variant: 'blank';
        };
        footer?: {
            variant: 'zephyr';
        } | {
            variant: 'blank';
        };
    };
};

/**
 * A unique, user-specified string used to prevent the duplicate creation of an entity. For example, if your invoices all have a unique invoice number, you can use the invoice number as an idempotency key. If you now perform another API request to create the same invoice, the request is ignored.
 */
export type IdempotencyKey = string;

/**
 * Type, profile and syntax to use for generating an e-invoice. May be set to `undefined` to indicate a raw PDF without structured e-invoice data (e.g. for B2C). For B2B use cases, we recommend ZUGFeRD.
 */
export type EInvoiceConfiguration = ({
    type?: 'zugferd';
} & ZugferdConfiguration) | ({
    type?: 'xrechnung';
} & XRechnungConfiguration);

export type ZugferdConfiguration = {
    /**
     * Type of e-invoice. Currently, ZUGFeRD and XRechnung are the two formats allowed by German law.
     */
    type: 'zugferd';
    profile: ZugferdProfile;
};

/**
 * ZUGFeRD profile to use when generating the e-invoice. Note that `minimum` and `basic-wl` are not sufficient under German law. We recommend `xrechnung`.
 */
export type ZugferdProfile = 'minimum' | 'basic-wl' | 'basic' | 'en-16931' | 'extended' | 'xrechnung';

export type XRechnungConfiguration = {
    /**
     * Type of e-invoice. Currently, ZUGFeRD and XRechnung are the two formats allowed by German law.
     */
    type: 'xrechnung';
    syntax: XRechnungSyntax;
    /**
     * Whether a PDF version of the document should be embedded inside the XRechnung XML.
     */
    embedPdf: boolean;
};

/**
 * Syntax to use when generating the XRechnung XML. We recommend `ubl`.
 */
export type XRechnungSyntax = 'ubl' | 'cii';

/**
 * [Unicode language identifier](https://www.unicode.org/reports/tr35/#Unicode_language_identifier) for localization. Currently, only `de-DE` for German and `en-US` for English are supported.
 */
export type UnicodeLanguageIdentifier = 'de-DE' | 'en-US';

/**
 * Delivery period. Also called invoice period.
 */
export type DeliveryPeriod = {
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    startDate?: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    endDate?: string;
    /**
     * [UNTDID 2005 code](https://www.rechnungs-api.de/docs/codes/untdid-2005) (limited subset) of the date when the VAT becomes accountable for the Seller and for the Buyer.
     */
    vatDate?: '3' | '35' | '432';
};

/**
 * Sender of this document. For most documents, this is the supplier (seller). For purchase orders, it is the customer (buyer).
 */
export type SenderParty = Party;

/**
 * Information about one of the parties involved in this document.
 */
export type Party = {
    /**
     * Party's legal name.
     */
    name: string;
    address: Address;
    /**
     * Electronic Address Scheme (EAS) and value. A simple scheme is `EM`, which can be used to specify an email address. Required only for e-invoices.
     */
    electronicAddress?: {
        /**
         * [Electronic Address Scheme (EAS)](https://www.rechnungs-api.de/docs/codes/eas) code (subset).
         */
        scheme: '2' | '7' | '9' | '37' | '60' | '88' | '96' | '97' | '106' | '130' | '135' | '142' | '151' | '177' | '183' | '184' | '188' | '190' | '191' | '192' | '193' | '195' | '196' | '198' | '199' | '200' | '201' | '202' | '204' | '208' | '209' | '210' | '211' | '212' | '213' | '215' | '216' | '218' | '221' | '230' | '235' | '9901' | '9910' | '9913' | '9914' | '9915' | '9918' | '9919' | '9920' | '9922' | '9923' | '9924' | '9925' | '9926' | '9927' | '9928' | '9929' | '9930' | '9931' | '9932' | '9933' | '9934' | '9935' | '9936' | '9937' | '9938' | '9939' | '9940' | '9941' | '9942' | '9943' | '9944' | '9945' | '9946' | '9947' | '9948' | '9949' | '9950' | '9951' | '9952' | '9953' | '9957' | '9959' | 'EM' | 'AQ' | 'AS' | 'AU';
        /**
         * Electronic address, matching the specified scheme
         */
        value: string;
    };
    contact: ContactMethods;
    vatId?: VatId;
    taxId?: TaxId;
    /**
     * Registration office and number for a company.
     */
    registration?: {
        /**
         * Registration office for a company.
         */
        office: string;
        /**
         * Registration number for a company.
         */
        number: string;
    };
    /**
     * Name of the chief executive officer in charge of this party.
     */
    ceo?: string;
    /**
     * Name of the owner of this party.
     */
    owner?: string;
};

export type Address = {
    /**
     * Address line 1 (e.g., street, PO Box, or company name).
     */
    line1: string;
    /**
     * Address line 2 (e.g., apartment, suite, unit, or building). May be empty.
     */
    line2?: string;
    /**
     * Address line 3 (any additional information). May be empty.
     */
    line3?: string;
    /**
     * ZIP or postal code.
     */
    postalCode: string;
    /**
     * City, district, suburb, town, or village.
     */
    city: string;
    /**
     * State, county, province, or region. May be empty.
     */
    region?: string;
    country: CountryCode;
};

/**
 * Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
 */
export type CountryCode = 'AD' | 'AE' | 'AF' | 'AG' | 'AI' | 'AL' | 'AM' | 'AO' | 'AQ' | 'AR' | 'AS' | 'AT' | 'AU' | 'AW' | 'AX' | 'AZ' | 'BA' | 'BB' | 'BD' | 'BE' | 'BF' | 'BG' | 'BH' | 'BI' | 'BJ' | 'BL' | 'BM' | 'BN' | 'BO' | 'BQ' | 'BR' | 'BS' | 'BT' | 'BV' | 'BW' | 'BY' | 'BZ' | 'CA' | 'CC' | 'CD' | 'CF' | 'CG' | 'CH' | 'CI' | 'CK' | 'CL' | 'CM' | 'CN' | 'CO' | 'CR' | 'CU' | 'CV' | 'CW' | 'CX' | 'CY' | 'CZ' | 'DE' | 'DJ' | 'DK' | 'DM' | 'DO' | 'DZ' | 'EC' | 'EE' | 'EG' | 'EH' | 'ER' | 'ES' | 'ET' | 'FI' | 'FJ' | 'FK' | 'FM' | 'FO' | 'FR' | 'GA' | 'GB' | 'GD' | 'GE' | 'GF' | 'GG' | 'GH' | 'GI' | 'GL' | 'GM' | 'GN' | 'GP' | 'GQ' | 'GR' | 'GS' | 'GT' | 'GU' | 'GW' | 'GY' | 'HK' | 'HM' | 'HN' | 'HR' | 'HT' | 'HU' | 'ID' | 'IE' | 'IL' | 'IM' | 'IN' | 'IO' | 'IQ' | 'IR' | 'IS' | 'IT' | 'JE' | 'JM' | 'JO' | 'JP' | 'KE' | 'KG' | 'KH' | 'KI' | 'KM' | 'KN' | 'KP' | 'KR' | 'KW' | 'KY' | 'KZ' | 'LA' | 'LB' | 'LC' | 'LI' | 'LK' | 'LR' | 'LS' | 'LT' | 'LU' | 'LV' | 'LY' | 'MA' | 'MC' | 'MD' | 'ME' | 'MF' | 'MG' | 'MH' | 'MK' | 'ML' | 'MM' | 'MN' | 'MO' | 'MP' | 'MQ' | 'MR' | 'MS' | 'MT' | 'MU' | 'MV' | 'MW' | 'MX' | 'MY' | 'MZ' | 'NA' | 'NC' | 'NE' | 'NF' | 'NG' | 'NI' | 'NL' | 'NO' | 'NP' | 'NR' | 'NU' | 'NZ' | 'OM' | 'PA' | 'PE' | 'PF' | 'PG' | 'PH' | 'PK' | 'PL' | 'PM' | 'PN' | 'PR' | 'PS' | 'PT' | 'PW' | 'PY' | 'QA' | 'RE' | 'RO' | 'RS' | 'RU' | 'RW' | 'SA' | 'SB' | 'SC' | 'SD' | 'SE' | 'SG' | 'SH' | 'SI' | 'SJ' | 'SK' | 'SL' | 'SM' | 'SN' | 'SO' | 'SR' | 'SS' | 'ST' | 'SV' | 'SX' | 'SY' | 'SZ' | 'TC' | 'TD' | 'TF' | 'TG' | 'TH' | 'TJ' | 'TK' | 'TL' | 'TM' | 'TN' | 'TO' | 'TR' | 'TT' | 'TV' | 'TW' | 'TZ' | 'UA' | 'UG' | 'UM' | 'US' | 'UY' | 'UZ' | 'VA' | 'VC' | 'VE' | 'VG' | 'VI' | 'VN' | 'VU' | 'WF' | 'WS' | 'YE' | 'YT' | 'ZA' | 'ZM' | 'ZW' | '1A' | 'XI';

/**
 * Contact point for a legal entity or person.
 */
export type ContactMethods = {
    /**
     * Name of the legal entity or person.
     */
    name?: string;
    email?: Email;
    phone?: Phone;
    website?: Website;
};

/**
 * Properly formatted email address.
 */
export type Email = string;

/**
 * Phone number. Consider using the [E.164](https://en.wikipedia.org/wiki/E.164) standard.
 */
export type Phone = string;

/**
 * Business website as part of a set of contact information.
 */
export type Website = string;

/**
 * Government issued VAT identification number.
 */
export type VatId = string;

/**
 * Government issued tax identification number.
 */
export type TaxId = string;

/**
 * Recipient of this document. For most documents, this is the customer (buyer). For purchase orders, it is the supplier (seller).
 */
export type RecipientParty = Party;

/**
 * Identifier provided by the buyer for internal routing purposes. Mandatory for e-invoices. This should be the "Leitweg-ID" if available. For B2B applications, accounting software sevDesk suggests using `00` instead, as the Leitweg-ID is not mandatory.
 */
export type BuyerReference = string;

/**
 * Information about the payment for goods and services mentioned in this document.
 */
export type PaymentInformation = {
    payee?: PayeeParty;
    /**
     * Specification of how payment should be transferred.
     */
    means: Array<{
        /**
         * [UNTDID 4461](https://www.rechnungs-api.de/docs/codes/untdid-4461) payment means code.
         */
        code: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '20' | '21' | '22' | '23' | '24' | '25' | '26' | '27' | '28' | '29' | '30' | '31' | '32' | '33' | '34' | '35' | '36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46' | '47' | '48' | '49' | '50' | '51' | '52' | '53' | '54' | '55' | '56' | '57' | '58' | '59' | '60' | '61' | '62' | '63' | '64' | '65' | '66' | '67' | '68' | '69' | '70' | '74' | '75' | '76' | '77' | '78' | '91' | '92' | '93' | '94' | '95' | '96' | '97' | 'ZZZ';
        bankAccount?: BankAccount;
    }>;
    /**
     * Textual description of the payment terms that apply to the amount due for payment (including description of possible penalties).
     */
    terms?: string;
};

/**
 * Information about the payee, i.e. the role that receives the payment. Shall be used when the payee is different from the supplier.
 */
export type PayeeParty = Party;

/**
 * Bank account details.
 */
export type BankAccount = {
    /**
     * Name of the bank.
     */
    bankName: string;
    iban: Iban;
    bic: Bic;
};

/**
 * International Bank Account Number (IBAN) without spaces.
 */
export type Iban = string;

/**
 * Bank Identification Code (BIC).
 */
export type Bic = string;

/**
 * Information about the goods and services.
 */
export type LineItem = {
    /**
     * Name of the item.
     */
    name: string;
    /**
     * Description for an item. The item description allows for describing the item and its features in more detail than the Item name.
     */
    description?: string;
    /**
     * Identifier by which the customer references this item.
     */
    customerReference?: string;
    /**
     * Identifier by which the supplier references this item.
     */
    supplierReference?: string;
    /**
     * Code identifying the country from which the item originates.
     */
    originCountry?: CountryCode;
    /**
     * Information about the VAT rate charged for this item.
     */
    vat: {
        code: VatCode;
        rate?: VatRate;
    };
};

/**
 * [UNTDID 5305 category code](https://www.rechnungs-api.de/docs/codes/untdid-5305) for the VAT rate.
 */
export type VatCode = 'S' | 'Z' | 'E' | 'AE' | 'K' | 'G' | 'O' | 'L' | 'M';

/**
 * Percentage VAT rate, e.g. 19 for 19%.
 */
export type VatRate = Decimal;

/**
 * Decimal number.
 */
export type Decimal = string;

/**
 * Quantity of goods or services, specified with a value and a unit.
 */
export type Quantity = {
    value: Decimal;
    unit: UnitCode;
};

/**
 * UN/ECE Recommendation [N°20](https://www.rechnungs-api.de/docs/codes/rec20) or [N°21](https://www.rechnungs-api.de/docs/codes/rec21) unit code.
 */
export type UnitCode = '10' | '11' | '13' | '14' | '15' | '20' | '21' | '22' | '23' | '24' | '25' | '27' | '28' | '33' | '34' | '35' | '37' | '38' | '40' | '41' | '56' | '57' | '58' | '59' | '60' | '61' | '74' | '77' | '80' | '81' | '85' | '87' | '89' | '91' | '1I' | '2A' | '2B' | '2C' | '2G' | '2H' | '2I' | '2J' | '2K' | '2L' | '2M' | '2N' | '2P' | '2Q' | '2R' | '2U' | '2X' | '2Y' | '2Z' | '3B' | '3C' | '4C' | '4G' | '4H' | '4K' | '4L' | '4M' | '4N' | '4O' | '4P' | '4Q' | '4R' | '4T' | '4U' | '4W' | '4X' | '5A' | '5B' | '5E' | '5J' | 'A10' | 'A11' | 'A12' | 'A13' | 'A14' | 'A15' | 'A16' | 'A17' | 'A18' | 'A19' | 'A2' | 'A20' | 'A21' | 'A22' | 'A23' | 'A24' | 'A26' | 'A27' | 'A28' | 'A29' | 'A3' | 'A30' | 'A31' | 'A32' | 'A33' | 'A34' | 'A35' | 'A36' | 'A37' | 'A38' | 'A39' | 'A4' | 'A40' | 'A41' | 'A42' | 'A43' | 'A44' | 'A45' | 'A47' | 'A48' | 'A49' | 'A5' | 'A53' | 'A54' | 'A55' | 'A56' | 'A59' | 'A6' | 'A68' | 'A69' | 'A7' | 'A70' | 'A71' | 'A73' | 'A74' | 'A75' | 'A76' | 'A8' | 'A84' | 'A85' | 'A86' | 'A87' | 'A88' | 'A89' | 'A9' | 'A90' | 'A91' | 'A93' | 'A94' | 'A95' | 'A96' | 'A97' | 'A98' | 'A99' | 'AA' | 'AB' | 'ACR' | 'ACT' | 'AD' | 'AE' | 'AH' | 'AI' | 'AK' | 'AL' | 'AMH' | 'AMP' | 'ANN' | 'APZ' | 'AQ' | 'AS' | 'ASM' | 'ASU' | 'ATM' | 'AWG' | 'AY' | 'AZ' | 'B1' | 'B10' | 'B11' | 'B12' | 'B13' | 'B14' | 'B15' | 'B16' | 'B17' | 'B18' | 'B19' | 'B20' | 'B21' | 'B22' | 'B23' | 'B24' | 'B25' | 'B26' | 'B27' | 'B28' | 'B29' | 'B3' | 'B30' | 'B31' | 'B32' | 'B33' | 'B34' | 'B35' | 'B4' | 'B41' | 'B42' | 'B43' | 'B44' | 'B45' | 'B46' | 'B47' | 'B48' | 'B49' | 'B50' | 'B52' | 'B53' | 'B54' | 'B55' | 'B56' | 'B57' | 'B58' | 'B59' | 'B60' | 'B61' | 'B62' | 'B63' | 'B64' | 'B66' | 'B67' | 'B68' | 'B69' | 'B7' | 'B70' | 'B71' | 'B72' | 'B73' | 'B74' | 'B75' | 'B76' | 'B77' | 'B78' | 'B79' | 'B8' | 'B80' | 'B81' | 'B82' | 'B83' | 'B84' | 'B85' | 'B86' | 'B87' | 'B88' | 'B89' | 'B90' | 'B91' | 'B92' | 'B93' | 'B94' | 'B95' | 'B96' | 'B97' | 'B98' | 'B99' | 'BAR' | 'BB' | 'BFT' | 'BHP' | 'BIL' | 'BLD' | 'BLL' | 'BP' | 'BPM' | 'BQL' | 'BTU' | 'BUA' | 'BUI' | 'C0' | 'C10' | 'C11' | 'C12' | 'C13' | 'C14' | 'C15' | 'C16' | 'C17' | 'C18' | 'C19' | 'C20' | 'C21' | 'C22' | 'C23' | 'C24' | 'C25' | 'C26' | 'C27' | 'C28' | 'C29' | 'C3' | 'C30' | 'C31' | 'C32' | 'C33' | 'C34' | 'C35' | 'C36' | 'C37' | 'C38' | 'C39' | 'C40' | 'C41' | 'C42' | 'C43' | 'C44' | 'C45' | 'C46' | 'C47' | 'C48' | 'C49' | 'C50' | 'C51' | 'C52' | 'C53' | 'C54' | 'C55' | 'C56' | 'C57' | 'C58' | 'C59' | 'C60' | 'C61' | 'C62' | 'C63' | 'C64' | 'C65' | 'C66' | 'C67' | 'C68' | 'C69' | 'C7' | 'C70' | 'C71' | 'C72' | 'C73' | 'C74' | 'C75' | 'C76' | 'C78' | 'C79' | 'C8' | 'C80' | 'C81' | 'C82' | 'C83' | 'C84' | 'C85' | 'C86' | 'C87' | 'C88' | 'C89' | 'C9' | 'C90' | 'C91' | 'C92' | 'C93' | 'C94' | 'C95' | 'C96' | 'C97' | 'C99' | 'CCT' | 'CDL' | 'CEL' | 'CEN' | 'CG' | 'CGM' | 'CKG' | 'CLF' | 'CLT' | 'CMK' | 'CMQ' | 'CMT' | 'CNP' | 'CNT' | 'COU' | 'CTG' | 'CTM' | 'CTN' | 'CUR' | 'CWA' | 'CWI' | 'D03' | 'D04' | 'D1' | 'D10' | 'D11' | 'D12' | 'D13' | 'D15' | 'D16' | 'D17' | 'D18' | 'D19' | 'D2' | 'D20' | 'D21' | 'D22' | 'D23' | 'D24' | 'D25' | 'D26' | 'D27' | 'D29' | 'D30' | 'D31' | 'D32' | 'D33' | 'D34' | 'D36' | 'D41' | 'D42' | 'D43' | 'D44' | 'D45' | 'D46' | 'D47' | 'D48' | 'D49' | 'D5' | 'D50' | 'D51' | 'D52' | 'D53' | 'D54' | 'D55' | 'D56' | 'D57' | 'D58' | 'D59' | 'D6' | 'D60' | 'D61' | 'D62' | 'D63' | 'D65' | 'D68' | 'D69' | 'D73' | 'D74' | 'D77' | 'D78' | 'D80' | 'D81' | 'D82' | 'D83' | 'D85' | 'D86' | 'D87' | 'D88' | 'D89' | 'D91' | 'D93' | 'D94' | 'D95' | 'DAA' | 'DAD' | 'DAY' | 'DB' | 'DBM' | 'DBW' | 'DD' | 'DEC' | 'DG' | 'DJ' | 'DLT' | 'DMA' | 'DMK' | 'DMO' | 'DMQ' | 'DMT' | 'DN' | 'DPC' | 'DPR' | 'DPT' | 'DRA' | 'DRI' | 'DRL' | 'DT' | 'DTN' | 'DWT' | 'DZN' | 'DZP' | 'E01' | 'E07' | 'E08' | 'E09' | 'E10' | 'E12' | 'E14' | 'E15' | 'E16' | 'E17' | 'E18' | 'E19' | 'E20' | 'E21' | 'E22' | 'E23' | 'E25' | 'E27' | 'E28' | 'E30' | 'E31' | 'E32' | 'E33' | 'E34' | 'E35' | 'E36' | 'E37' | 'E38' | 'E39' | 'E4' | 'E40' | 'E41' | 'E42' | 'E43' | 'E44' | 'E45' | 'E46' | 'E47' | 'E48' | 'E49' | 'E50' | 'E51' | 'E52' | 'E53' | 'E54' | 'E55' | 'E56' | 'E57' | 'E58' | 'E59' | 'E60' | 'E61' | 'E62' | 'E63' | 'E64' | 'E65' | 'E66' | 'E67' | 'E68' | 'E69' | 'E70' | 'E71' | 'E72' | 'E73' | 'E74' | 'E75' | 'E76' | 'E77' | 'E78' | 'E79' | 'E80' | 'E81' | 'E82' | 'E83' | 'E84' | 'E85' | 'E86' | 'E87' | 'E88' | 'E89' | 'E90' | 'E91' | 'E92' | 'E93' | 'E94' | 'E95' | 'E96' | 'E97' | 'E98' | 'E99' | 'EA' | 'EB' | 'EQ' | 'F01' | 'F02' | 'F03' | 'F04' | 'F05' | 'F06' | 'F07' | 'F08' | 'F10' | 'F11' | 'F12' | 'F13' | 'F14' | 'F15' | 'F16' | 'F17' | 'F18' | 'F19' | 'F20' | 'F21' | 'F22' | 'F23' | 'F24' | 'F25' | 'F26' | 'F27' | 'F28' | 'F29' | 'F30' | 'F31' | 'F32' | 'F33' | 'F34' | 'F35' | 'F36' | 'F37' | 'F38' | 'F39' | 'F40' | 'F41' | 'F42' | 'F43' | 'F44' | 'F45' | 'F46' | 'F47' | 'F48' | 'F49' | 'F50' | 'F51' | 'F52' | 'F53' | 'F54' | 'F55' | 'F56' | 'F57' | 'F58' | 'F59' | 'F60' | 'F61' | 'F62' | 'F63' | 'F64' | 'F65' | 'F66' | 'F67' | 'F68' | 'F69' | 'F70' | 'F71' | 'F72' | 'F73' | 'F74' | 'F75' | 'F76' | 'F77' | 'F78' | 'F79' | 'F80' | 'F81' | 'F82' | 'F83' | 'F84' | 'F85' | 'F86' | 'F87' | 'F88' | 'F89' | 'F90' | 'F91' | 'F92' | 'F93' | 'F94' | 'F95' | 'F96' | 'F97' | 'F98' | 'F99' | 'FAH' | 'FAR' | 'FBM' | 'FC' | 'FF' | 'FH' | 'FIT' | 'FL' | 'FNU' | 'FOT' | 'FP' | 'FR' | 'FS' | 'FTK' | 'FTQ' | 'G01' | 'G04' | 'G05' | 'G06' | 'G08' | 'G09' | 'G10' | 'G11' | 'G12' | 'G13' | 'G14' | 'G15' | 'G16' | 'G17' | 'G18' | 'G19' | 'G2' | 'G20' | 'G21' | 'G23' | 'G24' | 'G25' | 'G26' | 'G27' | 'G28' | 'G29' | 'G3' | 'G30' | 'G31' | 'G32' | 'G33' | 'G34' | 'G35' | 'G36' | 'G37' | 'G38' | 'G39' | 'G40' | 'G41' | 'G42' | 'G43' | 'G44' | 'G45' | 'G46' | 'G47' | 'G48' | 'G49' | 'G50' | 'G51' | 'G52' | 'G53' | 'G54' | 'G55' | 'G56' | 'G57' | 'G58' | 'G59' | 'G60' | 'G61' | 'G62' | 'G63' | 'G64' | 'G65' | 'G66' | 'G67' | 'G68' | 'G69' | 'G70' | 'G71' | 'G72' | 'G73' | 'G74' | 'G75' | 'G76' | 'G77' | 'G78' | 'G79' | 'G80' | 'G81' | 'G82' | 'G83' | 'G84' | 'G85' | 'G86' | 'G87' | 'G88' | 'G89' | 'G90' | 'G91' | 'G92' | 'G93' | 'G94' | 'G95' | 'G96' | 'G97' | 'G98' | 'G99' | 'GB' | 'GBQ' | 'GDW' | 'GE' | 'GF' | 'GFI' | 'GGR' | 'GIA' | 'GIC' | 'GII' | 'GIP' | 'GJ' | 'GL' | 'GLD' | 'GLI' | 'GLL' | 'GM' | 'GO' | 'GP' | 'GQ' | 'GRM' | 'GRN' | 'GRO' | 'GV' | 'GWH' | 'H03' | 'H04' | 'H05' | 'H06' | 'H07' | 'H08' | 'H09' | 'H10' | 'H11' | 'H12' | 'H13' | 'H14' | 'H15' | 'H16' | 'H18' | 'H19' | 'H20' | 'H21' | 'H22' | 'H23' | 'H24' | 'H25' | 'H26' | 'H27' | 'H28' | 'H29' | 'H30' | 'H31' | 'H32' | 'H33' | 'H34' | 'H35' | 'H36' | 'H37' | 'H38' | 'H39' | 'H40' | 'H41' | 'H42' | 'H43' | 'H44' | 'H45' | 'H46' | 'H47' | 'H48' | 'H49' | 'H50' | 'H51' | 'H52' | 'H53' | 'H54' | 'H55' | 'H56' | 'H57' | 'H58' | 'H59' | 'H60' | 'H61' | 'H62' | 'H63' | 'H64' | 'H65' | 'H66' | 'H67' | 'H68' | 'H69' | 'H70' | 'H71' | 'H72' | 'H73' | 'H74' | 'H75' | 'H76' | 'H77' | 'H79' | 'H80' | 'H81' | 'H82' | 'H83' | 'H84' | 'H85' | 'H87' | 'H88' | 'H89' | 'H90' | 'H91' | 'H92' | 'H93' | 'H94' | 'H95' | 'H96' | 'H98' | 'H99' | 'HA' | 'HAD' | 'HBA' | 'HBX' | 'HC' | 'HDW' | 'HEA' | 'HGM' | 'HH' | 'HIU' | 'HKM' | 'HLT' | 'HM' | 'HMO' | 'HMQ' | 'HMT' | 'HPA' | 'HTZ' | 'HUR' | 'HWE' | 'IA' | 'IE' | 'INH' | 'INK' | 'INQ' | 'ISD' | 'IU' | 'IUG' | 'IV' | 'J10' | 'J12' | 'J13' | 'J14' | 'J15' | 'J16' | 'J17' | 'J18' | 'J19' | 'J2' | 'J20' | 'J21' | 'J22' | 'J23' | 'J24' | 'J25' | 'J26' | 'J27' | 'J28' | 'J29' | 'J30' | 'J31' | 'J32' | 'J33' | 'J34' | 'J35' | 'J36' | 'J38' | 'J39' | 'J40' | 'J41' | 'J42' | 'J43' | 'J44' | 'J45' | 'J46' | 'J47' | 'J48' | 'J49' | 'J50' | 'J51' | 'J52' | 'J53' | 'J54' | 'J55' | 'J56' | 'J57' | 'J58' | 'J59' | 'J60' | 'J61' | 'J62' | 'J63' | 'J64' | 'J65' | 'J66' | 'J67' | 'J68' | 'J69' | 'J70' | 'J71' | 'J72' | 'J73' | 'J74' | 'J75' | 'J76' | 'J78' | 'J79' | 'J81' | 'J82' | 'J83' | 'J84' | 'J85' | 'J87' | 'J90' | 'J91' | 'J92' | 'J93' | 'J95' | 'J96' | 'J97' | 'J98' | 'J99' | 'JE' | 'JK' | 'JM' | 'JNT' | 'JOU' | 'JPS' | 'JWL' | 'K1' | 'K10' | 'K11' | 'K12' | 'K13' | 'K14' | 'K15' | 'K16' | 'K17' | 'K18' | 'K19' | 'K2' | 'K20' | 'K21' | 'K22' | 'K23' | 'K26' | 'K27' | 'K28' | 'K3' | 'K30' | 'K31' | 'K32' | 'K33' | 'K34' | 'K35' | 'K36' | 'K37' | 'K38' | 'K39' | 'K40' | 'K41' | 'K42' | 'K43' | 'K45' | 'K46' | 'K47' | 'K48' | 'K49' | 'K50' | 'K51' | 'K52' | 'K53' | 'K54' | 'K55' | 'K58' | 'K59' | 'K6' | 'K60' | 'K61' | 'K62' | 'K63' | 'K64' | 'K65' | 'K66' | 'K67' | 'K68' | 'K69' | 'K70' | 'K71' | 'K73' | 'K74' | 'K75' | 'K76' | 'K77' | 'K78' | 'K79' | 'K80' | 'K81' | 'K82' | 'K83' | 'K84' | 'K85' | 'K86' | 'K87' | 'K88' | 'K89' | 'K90' | 'K91' | 'K92' | 'K93' | 'K94' | 'K95' | 'K96' | 'K97' | 'K98' | 'K99' | 'KA' | 'KAT' | 'KB' | 'KBA' | 'KCC' | 'KDW' | 'KEL' | 'KGM' | 'KGS' | 'KHY' | 'KHZ' | 'KI' | 'KIC' | 'KIP' | 'KJ' | 'KJO' | 'KL' | 'KLK' | 'KLX' | 'KMA' | 'KMH' | 'KMK' | 'KMQ' | 'KMT' | 'KNI' | 'KNM' | 'KNS' | 'KNT' | 'KO' | 'KPA' | 'KPH' | 'KPO' | 'KPP' | 'KR' | 'KSD' | 'KSH' | 'KT' | 'KTN' | 'KUR' | 'KVA' | 'KVR' | 'KVT' | 'KW' | 'KWH' | 'KWN' | 'KWO' | 'KWS' | 'KWT' | 'KWY' | 'KX' | 'L10' | 'L11' | 'L12' | 'L13' | 'L14' | 'L15' | 'L16' | 'L17' | 'L18' | 'L19' | 'L2' | 'L20' | 'L21' | 'L23' | 'L24' | 'L25' | 'L26' | 'L27' | 'L28' | 'L29' | 'L30' | 'L31' | 'L32' | 'L33' | 'L34' | 'L35' | 'L36' | 'L37' | 'L38' | 'L39' | 'L40' | 'L41' | 'L42' | 'L43' | 'L44' | 'L45' | 'L46' | 'L47' | 'L48' | 'L49' | 'L50' | 'L51' | 'L52' | 'L53' | 'L54' | 'L55' | 'L56' | 'L57' | 'L58' | 'L59' | 'L60' | 'L63' | 'L64' | 'L65' | 'L66' | 'L67' | 'L68' | 'L69' | 'L70' | 'L71' | 'L72' | 'L73' | 'L74' | 'L75' | 'L76' | 'L77' | 'L78' | 'L79' | 'L80' | 'L81' | 'L82' | 'L83' | 'L84' | 'L85' | 'L86' | 'L87' | 'L88' | 'L89' | 'L90' | 'L91' | 'L92' | 'L93' | 'L94' | 'L95' | 'L96' | 'L98' | 'L99' | 'LA' | 'LAC' | 'LBR' | 'LBT' | 'LD' | 'LEF' | 'LF' | 'LH' | 'LK' | 'LM' | 'LN' | 'LO' | 'LP' | 'LPA' | 'LR' | 'LS' | 'LTN' | 'LTR' | 'LUB' | 'LUM' | 'LUX' | 'LY' | 'M1' | 'M10' | 'M11' | 'M12' | 'M13' | 'M14' | 'M15' | 'M16' | 'M17' | 'M18' | 'M19' | 'M20' | 'M21' | 'M22' | 'M23' | 'M24' | 'M25' | 'M26' | 'M27' | 'M29' | 'M30' | 'M31' | 'M32' | 'M33' | 'M34' | 'M35' | 'M36' | 'M37' | 'M38' | 'M39' | 'M4' | 'M40' | 'M41' | 'M42' | 'M43' | 'M44' | 'M45' | 'M46' | 'M47' | 'M48' | 'M49' | 'M5' | 'M50' | 'M51' | 'M52' | 'M53' | 'M55' | 'M56' | 'M57' | 'M58' | 'M59' | 'M60' | 'M61' | 'M62' | 'M63' | 'M64' | 'M65' | 'M66' | 'M67' | 'M68' | 'M69' | 'M7' | 'M70' | 'M71' | 'M72' | 'M73' | 'M74' | 'M75' | 'M76' | 'M77' | 'M78' | 'M79' | 'M80' | 'M81' | 'M82' | 'M83' | 'M84' | 'M85' | 'M86' | 'M87' | 'M88' | 'M89' | 'M9' | 'M90' | 'M91' | 'M92' | 'M93' | 'M94' | 'M95' | 'M96' | 'M97' | 'M98' | 'M99' | 'MAH' | 'MAL' | 'MAM' | 'MAR' | 'MAW' | 'MBE' | 'MBF' | 'MBR' | 'MC' | 'MCU' | 'MD' | 'MGM' | 'MHZ' | 'MIK' | 'MIL' | 'MIN' | 'MIO' | 'MIU' | 'MKD' | 'MKM' | 'MKW' | 'MLD' | 'MLT' | 'MMK' | 'MMQ' | 'MMT' | 'MND' | 'MNJ' | 'MON' | 'MPA' | 'MQD' | 'MQH' | 'MQM' | 'MQS' | 'MQW' | 'MRD' | 'MRM' | 'MRW' | 'MSK' | 'MTK' | 'MTQ' | 'MTR' | 'MTS' | 'MTZ' | 'MVA' | 'MWH' | 'N1' | 'N10' | 'N11' | 'N12' | 'N13' | 'N14' | 'N15' | 'N16' | 'N17' | 'N18' | 'N19' | 'N20' | 'N21' | 'N22' | 'N23' | 'N24' | 'N25' | 'N26' | 'N27' | 'N28' | 'N29' | 'N3' | 'N30' | 'N31' | 'N32' | 'N33' | 'N34' | 'N35' | 'N36' | 'N37' | 'N38' | 'N39' | 'N40' | 'N41' | 'N42' | 'N43' | 'N44' | 'N45' | 'N46' | 'N47' | 'N48' | 'N49' | 'N50' | 'N51' | 'N52' | 'N53' | 'N54' | 'N55' | 'N56' | 'N57' | 'N58' | 'N59' | 'N60' | 'N61' | 'N62' | 'N63' | 'N64' | 'N65' | 'N66' | 'N67' | 'N68' | 'N69' | 'N70' | 'N71' | 'N72' | 'N73' | 'N74' | 'N75' | 'N76' | 'N77' | 'N78' | 'N79' | 'N80' | 'N81' | 'N82' | 'N83' | 'N84' | 'N85' | 'N86' | 'N87' | 'N88' | 'N89' | 'N90' | 'N91' | 'N92' | 'N93' | 'N94' | 'N95' | 'N96' | 'N97' | 'N98' | 'N99' | 'NA' | 'NAR' | 'NCL' | 'NEW' | 'NF' | 'NIL' | 'NIU' | 'NL' | 'NM3' | 'NMI' | 'NMP' | 'NPT' | 'NT' | 'NTU' | 'NU' | 'NX' | 'OA' | 'ODE' | 'ODG' | 'ODK' | 'ODM' | 'OHM' | 'ON' | 'ONZ' | 'OPM' | 'OT' | 'OZA' | 'OZI' | 'P1' | 'P10' | 'P11' | 'P12' | 'P13' | 'P14' | 'P15' | 'P16' | 'P17' | 'P18' | 'P19' | 'P2' | 'P20' | 'P21' | 'P22' | 'P23' | 'P24' | 'P25' | 'P26' | 'P27' | 'P28' | 'P29' | 'P30' | 'P31' | 'P32' | 'P33' | 'P34' | 'P35' | 'P36' | 'P37' | 'P38' | 'P39' | 'P40' | 'P41' | 'P42' | 'P43' | 'P44' | 'P45' | 'P46' | 'P47' | 'P48' | 'P49' | 'P5' | 'P50' | 'P51' | 'P52' | 'P53' | 'P54' | 'P55' | 'P56' | 'P57' | 'P58' | 'P59' | 'P60' | 'P61' | 'P62' | 'P63' | 'P64' | 'P65' | 'P66' | 'P67' | 'P68' | 'P69' | 'P70' | 'P71' | 'P72' | 'P73' | 'P74' | 'P75' | 'P76' | 'P77' | 'P78' | 'P79' | 'P80' | 'P81' | 'P82' | 'P83' | 'P84' | 'P85' | 'P86' | 'P87' | 'P88' | 'P89' | 'P90' | 'P91' | 'P92' | 'P93' | 'P94' | 'P95' | 'P96' | 'P97' | 'P98' | 'P99' | 'PAL' | 'PD' | 'PFL' | 'PGL' | 'PI' | 'PLA' | 'PO' | 'PQ' | 'PR' | 'PS' | 'PTD' | 'PTI' | 'PTL' | 'PTN' | 'Q10' | 'Q11' | 'Q12' | 'Q13' | 'Q14' | 'Q15' | 'Q16' | 'Q17' | 'Q18' | 'Q19' | 'Q20' | 'Q21' | 'Q22' | 'Q23' | 'Q24' | 'Q25' | 'Q26' | 'Q27' | 'Q28' | 'Q29' | 'Q3' | 'Q30' | 'Q31' | 'Q32' | 'Q33' | 'Q34' | 'Q35' | 'Q36' | 'Q37' | 'Q38' | 'Q39' | 'Q40' | 'Q41' | 'Q42' | 'QA' | 'QAN' | 'QB' | 'QR' | 'QTD' | 'QTI' | 'QTL' | 'QTR' | 'R1' | 'R9' | 'RH' | 'RM' | 'ROM' | 'RP' | 'RPM' | 'RPS' | 'RT' | 'S3' | 'S4' | 'SAN' | 'SCO' | 'SCR' | 'SEC' | 'SET' | 'SG' | 'SIE' | 'SM3' | 'SMI' | 'SQ' | 'SQR' | 'SR' | 'STC' | 'STI' | 'STK' | 'STL' | 'STN' | 'STW' | 'SW' | 'SX' | 'SYR' | 'T0' | 'T3' | 'TAH' | 'TAN' | 'TI' | 'TIC' | 'TIP' | 'TKM' | 'TMS' | 'TNE' | 'TP' | 'TPI' | 'TPR' | 'TQD' | 'TRL' | 'TST' | 'TTS' | 'U1' | 'U2' | 'UB' | 'UC' | 'VA' | 'VLT' | 'VP' | 'W2' | 'WA' | 'WB' | 'WCD' | 'WE' | 'WEB' | 'WEE' | 'WG' | 'WHR' | 'WM' | 'WSD' | 'WTT' | 'X1' | 'YDK' | 'YDQ' | 'YRD' | 'Z11' | 'Z9' | 'ZP' | 'ZZ' | 'X1A' | 'X1B' | 'X1D' | 'X1F' | 'X1G' | 'X1W' | 'X2C' | 'X3A' | 'X3H' | 'X43' | 'X44' | 'X4A' | 'X4B' | 'X4C' | 'X4D' | 'X4F' | 'X4G' | 'X4H' | 'X5H' | 'X5L' | 'X5M' | 'X6H' | 'X6P' | 'X7A' | 'X7B' | 'X8A' | 'X8B' | 'X8C' | 'XAA' | 'XAB' | 'XAC' | 'XAD' | 'XAE' | 'XAF' | 'XAG' | 'XAH' | 'XAI' | 'XAJ' | 'XAL' | 'XAM' | 'XAP' | 'XAT' | 'XAV' | 'XB4' | 'XBA' | 'XBB' | 'XBC' | 'XBD' | 'XBE' | 'XBF' | 'XBG' | 'XBH' | 'XBI' | 'XBJ' | 'XBK' | 'XBL' | 'XBM' | 'XBN' | 'XBO' | 'XBP' | 'XBQ' | 'XBR' | 'XBS' | 'XBT' | 'XBU' | 'XBV' | 'XBW' | 'XBX' | 'XBY' | 'XBZ' | 'XCA' | 'XCB' | 'XCC' | 'XCD' | 'XCE' | 'XCF' | 'XCG' | 'XCH' | 'XCI' | 'XCJ' | 'XCK' | 'XCL' | 'XCM' | 'XCN' | 'XCO' | 'XCP' | 'XCQ' | 'XCR' | 'XCS' | 'XCT' | 'XCU' | 'XCV' | 'XCW' | 'XCX' | 'XCY' | 'XCZ' | 'XDA' | 'XDB' | 'XDC' | 'XDG' | 'XDH' | 'XDI' | 'XDJ' | 'XDK' | 'XDL' | 'XDM' | 'XDN' | 'XDP' | 'XDR' | 'XDS' | 'XDT' | 'XDU' | 'XDV' | 'XDW' | 'XDX' | 'XDY' | 'XEC' | 'XED' | 'XEE' | 'XEF' | 'XEG' | 'XEH' | 'XEI' | 'XEN' | 'XFB' | 'XFC' | 'XFD' | 'XFE' | 'XFI' | 'XFL' | 'XFO' | 'XFP' | 'XFR' | 'XFT' | 'XFW' | 'XFX' | 'XGB' | 'XGI' | 'XGL' | 'XGR' | 'XGU' | 'XGY' | 'XGZ' | 'XHA' | 'XHB' | 'XHC' | 'XHG' | 'XHN' | 'XHR' | 'XIA' | 'XIB' | 'XIC' | 'XID' | 'XIE' | 'XIF' | 'XIG' | 'XIH' | 'XIK' | 'XIL' | 'XIN' | 'XIZ' | 'XJB' | 'XJC' | 'XJG' | 'XJR' | 'XJT' | 'XJY' | 'XKG' | 'XKI' | 'XLE' | 'XLG' | 'XLT' | 'XLU' | 'XLV' | 'XLZ' | 'XMA' | 'XMB' | 'XMC' | 'XME' | 'XMR' | 'XMS' | 'XMT' | 'XMW' | 'XMX' | 'XNA' | 'XNE' | 'XNF' | 'XNG' | 'XNS' | 'XNT' | 'XNU' | 'XNV' | 'XOA' | 'XOB' | 'XOC' | 'XOD' | 'XOE' | 'XOF' | 'XOK' | 'XOT' | 'XOU' | 'XOG' | 'XOH' | 'XOI' | 'XOJ' | 'XOL' | 'XOM' | 'XON' | 'XOP' | 'XOQ' | 'XOR' | 'XOS' | 'XOV' | 'XOW' | 'XOX' | 'XOY' | 'XOZ' | 'XO1' | 'XO2' | 'XO3' | 'XO4' | 'XO5' | 'XO6' | 'XO7' | 'XO8' | 'XO9' | 'XP1' | 'XP3' | 'XP4' | 'XP2' | 'XPA' | 'XPB' | 'XPC' | 'XPD' | 'XPE' | 'XPF' | 'XPG' | 'XPH' | 'XPI' | 'XPJ' | 'XPK' | 'XPL' | 'XPN' | 'XPO' | 'XPP' | 'XPR' | 'XPT' | 'XPU' | 'XPV' | 'XPX' | 'XPY' | 'XPZ' | 'XQA' | 'XQB' | 'XQC' | 'XQD' | 'XQF' | 'XQG' | 'XQH' | 'XQJ' | 'XQK' | 'XQL' | 'XQM' | 'XQN' | 'XQP' | 'XQQ' | 'XQR' | 'XQS' | 'XRD' | 'XRG' | 'XRJ' | 'XRK' | 'XRL' | 'XRO' | 'XRT' | 'XRZ' | 'XSA' | 'XSB' | 'XSC' | 'XSD' | 'XSE' | 'XSH' | 'XSI' | 'XSK' | 'XSL' | 'XSM' | 'XSO' | 'XSP' | 'XSS' | 'XST' | 'XSU' | 'XSV' | 'XSW' | 'XSY' | 'XSZ' | 'XT1' | 'XTB' | 'XTC' | 'XTD' | 'XTE' | 'XTG' | 'XTI' | 'XTK' | 'XTL' | 'XTN' | 'XTO' | 'XTR' | 'XTS' | 'XTT' | 'XTU' | 'XTV' | 'XTW' | 'XTY' | 'XTZ' | 'XUC' | 'XUN' | 'XVA' | 'XVG' | 'XVI' | 'XVK' | 'XVL' | 'XVO' | 'XVP' | 'XVQ' | 'XVN' | 'XVR' | 'XVS' | 'XVY' | 'XWA' | 'XWB' | 'XWC' | 'XWD' | 'XWF' | 'XWG' | 'XWH' | 'XWJ' | 'XWK' | 'XWL' | 'XWM' | 'XWN' | 'XWP' | 'XWQ' | 'XWR' | 'XWS' | 'XWT' | 'XWU' | 'XWV' | 'XWW' | 'XWX' | 'XWY' | 'XWZ' | 'XXA' | 'XXB' | 'XXC' | 'XXD' | 'XXF' | 'XXG' | 'XXH' | 'XXJ' | 'XXK' | 'XYA' | 'XYB' | 'XYC' | 'XYD' | 'XYF' | 'XYG' | 'XYH' | 'XYJ' | 'XYK' | 'XYL' | 'XYM' | 'XYN' | 'XYP' | 'XYQ' | 'XYR' | 'XYS' | 'XYT' | 'XYV' | 'XYW' | 'XYX' | 'XYY' | 'XYZ' | 'XZA' | 'XZB' | 'XZC' | 'XZD' | 'XZF' | 'XZG' | 'XZH' | 'XZJ' | 'XZK' | 'XZL' | 'XZM' | 'XZN' | 'XZP' | 'XZQ' | 'XZR' | 'XZS' | 'XZT' | 'XZU' | 'XZV' | 'XZW' | 'XZX' | 'XZY' | 'XZZ';

/**
 * Monetary amount with value and currency.
 */
export type Amount = {
    value: AmountValue;
    currency: CurrencyCode;
};

/**
 * Monetary amount without associated currency, i.e. a decimal number.
 */
export type AmountValue = string;

/**
 * Three-letter currency code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)).
 */
export type CurrencyCode = 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BOV' | 'BRL' | 'BSD' | 'BTN' | 'BWP' | 'BYN' | 'BZD' | 'CAD' | 'CDF' | 'CHE' | 'CHF' | 'CHW' | 'CLF' | 'CLP' | 'CNY' | 'COP' | 'COU' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MXV' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SOS' | 'SRD' | 'SSP' | 'STN' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'USN' | 'UYI' | 'UYU' | 'UYW' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XBA' | 'XBB' | 'XBC' | 'XBD' | 'XCD' | 'XDR' | 'XOF' | 'XPD' | 'XPF' | 'XPT' | 'XSU' | 'XTS' | 'XUA' | 'YER' | 'ZAR' | 'ZMW' | 'ZWL';

/**
 * Custom JSON value that you may use for storing additional metadata in any shape.
 */
export type CustomData = unknown;

/**
 * [Data URL](https://developer.mozilla.org/en-US/docs/Web/URI/Reference/Schemes/data) used to specify an image (e.g. a logo) in a JSON string encodable format. The maximum size is currently 10MiB. Supported MIME types are:
 * * `image/png`
 * * `image/jpeg`
 * * `image/svg+xml`
 */
export type ImageData = string;

/**
 * Maximum number of entities to return in the result set of this API call. Used for paginated APIs.
 */
export type Limit = number;

/**
 * Opaque token to fetch the next page of a paginated request. Used for paginated APIs. If the cursor is null in an API response, the end has been reached.
 */
export type Cursor = string;

/**
 * Creating a ledger can currently be done with an empty JSON object without any paramters.
 */
export type LedgerCreateRequest = {
    customData?: CustomData;
};

export type LedgerAccountCreateRequest = {
    number: LedgerAccountNumber;
    type: LedgerAccountType;
    customData?: CustomData;
};

/**
 * User-specified number uniquely identifying the account within the ledger.
 */
export type LedgerAccountNumber = string;

/**
 * The type of a ledger account, indicating where on the balance sheet or profit and loss statement this account will be shown.
 *
 * The corresponding German names are:
 * * "assets" = Aktiva
 * * "liabilities" = Verbindlichkeiten (Passiva)
 * * "equity" = Eigenkapital (Passiva)
 * * "revenue" = Erträge (GuV)
 * * "expenses" = Aufwendungen (GuV)
 */
export type LedgerAccountType = 'assets' | 'liabilities' | 'equity' | 'revenue' | 'expenses';

export type LedgerTransactionCreateRequest = {
    idempotencyKey?: IdempotencyKey;
    /**
     * Textual description of this transaction.
     */
    description: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    accountingDate: string;
    positions: Array<{
        debitAccountNumber: LedgerAccountNumber;
        creditAccountNumber: LedgerAccountNumber;
        value: Decimal;
    }>;
    customData?: CustomData;
};

/**
 * Document of any type (e.g. an invoice)
 */
export type Document = {
    /**
     * Unique identifier.
     */
    id: string;
    idempotencyKey?: IdempotencyKey;
    /**
     * Type of a document, affecting localized strings, layouts, and possible parameters of the document.
     */
    type: 'invoice' | 'credit-note' | 'purchase-order' | 'sales-order' | 'quotation' | 'delivery-note';
    eInvoice?: EInvoiceConfiguration;
    locale: UnicodeLanguageIdentifier;
    /**
     * Unique identifier of the document in the business context, e.g. an invoice number.
     */
    number: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    issueDate: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    dueDate: string;
    deliveryPeriod?: DeliveryPeriod;
    sender: SenderParty;
    recipient: RecipientParty;
    buyerReference?: BuyerReference;
    payment: PaymentInformation;
    /**
     * Information about the delivery destination of physical goods.
     */
    delivery?: {
        address: Address;
    };
    /**
     * Text that will be displayed before the price breakdown.
     */
    preTableText?: string;
    /**
     * Text that will be displayed after the price breakdown.
     */
    postTableText?: string;
    lines: Array<DocumentLine>;
    /**
     * Information about the VAT on the document level.
     */
    vat: {
        /**
         * All VAT amounts of a given document grouped by their VAT code and rate.
         */
        groups: Array<{
            code: VatCode;
            rate?: VatRate;
            /**
             * Sum of all net amounts that are to be taxed by this specific VAT code and rate.
             */
            taxableAmount: Amount;
            /**
             * VAT amount that is to be paid for this specific VAT code and rate.
             */
            taxAmount: Amount;
        }>;
        /**
         * Total VAT amount to be paid for the whole document.
         */
        totalAmount: Amount;
    };
    netAmount: Amount;
    grossAmount: Amount;
    hash: Hash;
    customData?: CustomData;
    /**
     * Date and time at which this entity was created ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    createdAt: string;
    /**
     * Date and time at which this entity will be deleted or archived automatically ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    expiresAt: string;
};

/**
 * One line item of a document. May contain children.
 */
export type DocumentLine = {
    /**
     * Unique identifier.
     */
    id: string;
    item: LineItem;
    quantity: Quantity;
    unitPrice: Amount;
    totalPrice: Amount;
    /**
     * Textual note that gives unstructured information that is relevant to the document line.
     */
    note?: string;
};

/**
 * Collection of hashes for the associated file (e.g. PDF or XML).
 */
export type Hash = {
    /**
     * [Base64](https://en.wikipedia.org/wiki/Base64) encoded [SHA-256](https://en.wikipedia.org/wiki/SHA-2) hash.
     */
    sha256: string;
};

/**
 * This is a paginated API response. If the cursor field is null, no more items can be retrieved.
 */
export type LedgerListResponse = {
    /**
     * The partial result set for this page.
     */
    items: Array<Ledger>;
    cursor: Cursor | null;
};

/**
 * A ledger is collection of bookkeeping accounts and transactions. Each ledger is completely independent from all other ledgers.
 */
export type Ledger = {
    /**
     * Unique identifier.
     */
    id: string;
    customData?: CustomData;
    /**
     * Date and time at which this entity was created ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    createdAt: string;
};

/**
 * This is a paginated API response. If the cursor field is null, no more items can be retrieved.
 */
export type LedgerAccountListResponse = {
    /**
     * The partial result set for this page.
     */
    items: Array<LedgerAccount>;
    cursor: Cursor | null;
};

/**
 * A single booking account associated with a ledger. Accounts have a balance and appear eiher on the credit or debit side of any given transaction.
 */
export type LedgerAccount = {
    /**
     * Unique identifier.
     */
    ledgerId: string;
    number: LedgerAccountNumber;
    type: LedgerAccountType;
    customData?: CustomData;
    /**
     * Date and time at which this entity was created ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    createdAt: string;
};

/**
 * This is a paginated API response. If the cursor field is null, no more items can be retrieved.
 */
export type LedgerTransactionListResponse = {
    /**
     * The partial result set for this page.
     */
    items: Array<LedgerTransaction>;
    cursor: Cursor | null;
};

/**
 * A single transaction in a ledger. A given transaction can have one or multiple positions.
 */
export type LedgerTransaction = {
    /**
     * Unique identifier.
     */
    ledgerId: string;
    /**
     * Auto-incrementing unique integer identifier for a transaction on a ledger.
     */
    number: number;
    idempotencyKey?: IdempotencyKey;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    accountingDate: string;
    /**
     * Textual description of this transaction.
     */
    description: string;
    positions: Array<LedgerTransactionPosition>;
    customData?: CustomData;
    hash: string;
    /**
     * Date and time at which this entity was created ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    createdAt: string;
    /**
     * Date and time at which this entity was archived [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    archivedAt?: string;
    /**
     * Auto-incrementing unique integer identifier for a transaction on a ledger.
     */
    archivesNumber?: number;
    /**
     * Auto-incrementing unique integer identifier for a transaction on a ledger.
     */
    archivedByNumber?: number;
};

/**
 * A single position of a transaction in a ledger. A given transaction can have one or multiple positions.
 */
export type LedgerTransactionPosition = {
    number: number;
    debitAccountNumber: LedgerAccountNumber;
    creditAccountNumber: LedgerAccountNumber;
    value: Decimal;
};

/**
 * Balances on a given ledger after applying all transactions which have their accountingDate between startDate and endDate.
 */
export type LedgerBalanceListResponse = {
    /**
     * Unique identifier.
     */
    ledgerId: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    startDate?: string;
    /**
     * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
     */
    endDate?: string;
    balances: Array<LedgerBalance>;
};

/**
 * Balance of a specific account on a ledger after applying transactions from a previously specified timeframe.
 */
export type LedgerBalance = {
    accountNumber: LedgerAccountNumber;
    balance: Decimal;
};

export type CreateDocumentData = {
    body: DocumentCreateRequest;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/documents';
};

export type CreateDocumentResponses = {
    /**
     * Document created successfully.
     */
    200: Document;
};

export type CreateDocumentResponse = CreateDocumentResponses[keyof CreateDocumentResponses];

export type ReadDocumentData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        documentId: string;
    };
    query?: {
        /**
         * Format to retrieve.
         */
        format?: 'json' | 'xml' | 'pdf';
    };
    url: '/api/v1/documents/{documentId}';
};

export type ReadDocumentResponses = {
    /**
     * Document returned successfully.
     */
    200: Document;
};

export type ReadDocumentResponse = ReadDocumentResponses[keyof ReadDocumentResponses];

export type ListLedgersData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path?: never;
    query?: {
        /**
         * Maximum number of entities to return in the result set of this API call. Used for paginated APIs.
         */
        limit?: Limit;
        cursor?: Cursor;
    };
    url: '/api/v1/ledgers';
};

export type ListLedgersResponses = {
    /**
     * Ledgers retrieved successfully.
     */
    200: LedgerListResponse;
};

export type ListLedgersResponse = ListLedgersResponses[keyof ListLedgersResponses];

export type CreateLedgerData = {
    body: LedgerCreateRequest;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/ledgers';
};

export type CreateLedgerResponses = {
    /**
     * Ledger created successfully.
     */
    200: Ledger;
};

export type CreateLedgerResponse = CreateLedgerResponses[keyof CreateLedgerResponses];

export type DeleteLedgerData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: never;
    url: '/api/v1/ledgers/{ledgerId}';
};

export type DeleteLedgerResponses = {
    /**
     * Ledger deleted successfully.
     */
    200: Ledger;
};

export type DeleteLedgerResponse = DeleteLedgerResponses[keyof DeleteLedgerResponses];

export type ListLedgerAccountsData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: {
        /**
         * Maximum number of entities to return in the result set of this API call. Used for paginated APIs.
         */
        limit?: Limit;
        cursor?: Cursor;
    };
    url: '/api/v1/ledgers/{ledgerId}/accounts';
};

export type ListLedgerAccountsResponses = {
    /**
     * Ledger accounts retrieved successfully.
     */
    200: LedgerAccountListResponse;
};

export type ListLedgerAccountsResponse = ListLedgerAccountsResponses[keyof ListLedgerAccountsResponses];

export type CreateLedgerAccountData = {
    body: LedgerAccountCreateRequest;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: never;
    url: '/api/v1/ledgers/{ledgerId}/accounts';
};

export type CreateLedgerAccountResponses = {
    /**
     * Ledger account created successfully.
     */
    200: LedgerAccount;
};

export type CreateLedgerAccountResponse = CreateLedgerAccountResponses[keyof CreateLedgerAccountResponses];

export type ListLedgerTransactionsData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: {
        /**
         * Maximum number of entities to return in the result set of this API call. Used for paginated APIs.
         */
        limit?: Limit;
        cursor?: Cursor;
    };
    url: '/api/v1/ledgers/{ledgerId}/transactions';
};

export type ListLedgerTransactionsResponses = {
    /**
     * Ledger transactions retrieved successfully.
     */
    200: LedgerTransactionListResponse;
};

export type ListLedgerTransactionsResponse = ListLedgerTransactionsResponses[keyof ListLedgerTransactionsResponses];

export type CreateLedgerTransactionData = {
    body: LedgerTransactionCreateRequest;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: never;
    url: '/api/v1/ledgers/{ledgerId}/transactions';
};

export type CreateLedgerTransactionResponses = {
    /**
     * Ledger transaction created successfully.
     */
    200: LedgerTransaction;
};

export type CreateLedgerTransactionResponse = CreateLedgerTransactionResponses[keyof CreateLedgerTransactionResponses];

export type ArchiveLedgerTransactionData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
        /**
         * Auto-incrementing unique integer identifier for a transaction on a ledger.
         */
        transactionNumber: number;
    };
    query?: never;
    url: '/api/v1/ledgers/{ledgerId}/transactions/{transactionNumber}';
};

export type ArchiveLedgerTransactionResponses = {
    /**
     * Ledger transaction archived successfully.
     */
    200: LedgerTransaction;
};

export type ArchiveLedgerTransactionResponse = ArchiveLedgerTransactionResponses[keyof ArchiveLedgerTransactionResponses];

export type ListLedgerBalancesData = {
    body?: never;
    headers: {
        /**
         * Production or testing API key from the dashboard.
         */
        Authorization: string;
    };
    path: {
        /**
         * Unique identifier.
         */
        ledgerId: string;
    };
    query?: {
        /**
         * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
         */
        startDate?: string;
        /**
         * Date string with format `YYYY-MM-DD` ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)).
         */
        endDate?: string;
    };
    url: '/api/v1/ledgers/{ledgerId}/balances';
};

export type ListLedgerBalancesResponses = {
    /**
     * Ledger balances retrieved successfully.
     */
    200: LedgerBalanceListResponse;
};

export type ListLedgerBalancesResponse = ListLedgerBalancesResponses[keyof ListLedgerBalancesResponses];

export type ClientOptions = {
    baseUrl: 'http://www.localhost' | (string & {});
};